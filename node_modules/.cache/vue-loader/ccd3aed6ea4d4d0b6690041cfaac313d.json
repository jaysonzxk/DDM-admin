{"remainingRequest":"/Users/jayson/Desktop/work/DDM-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jayson/Desktop/work/DDM-admin/src/components/ThemePicker/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/jayson/Desktop/work/DDM-admin/src/components/ThemePicker/index.vue","mtime":1720245294008},{"path":"/Users/jayson/Desktop/work/DDM-admin/node_modules/cache-loader/dist/cjs.js","mtime":1720245288376},{"path":"/Users/jayson/Desktop/work/DDM-admin/node_modules/babel-loader/lib/index.js","mtime":1720245285342},{"path":"/Users/jayson/Desktop/work/DDM-admin/node_modules/cache-loader/dist/cjs.js","mtime":1720245288376},{"path":"/Users/jayson/Desktop/work/DDM-admin/node_modules/vue-loader/lib/index.js","mtime":1720245293567}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IHZlcnNpb24gPSByZXF1aXJlKCJlbGVtZW50LXVpL3BhY2thZ2UuanNvbiIpLnZlcnNpb247IC8vIGVsZW1lbnQtdWkgdmVyc2lvbiBmcm9tIG5vZGVfbW9kdWxlcwpjb25zdCBPUklHSU5BTF9USEVNRSA9ICIjNDA5RUZGIjsgLy8gZGVmYXVsdCBjb2xvcgoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFsazogIiIsIC8vIGNvbnRlbnQgb2YgdGhlbWUtY2hhbGsgY3NzCiAgICAgIHRoZW1lOiAiIgogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBkZWZhdWx0VGhlbWUoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5zZXR0aW5ncy50aGVtZTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBkZWZhdWx0VGhlbWU6IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24odmFsLCBvbGRWYWwpIHsKICAgICAgICB0aGlzLnRoZW1lID0gdmFsOwogICAgICB9LAogICAgICBpbW1lZGlhdGU6IHRydWUKICAgIH0sCiAgICBhc3luYyB0aGVtZSh2YWwpIHsKICAgICAgY29uc3Qgb2xkVmFsID0gdGhpcy5jaGFsayA/IHRoaXMudGhlbWUgOiBPUklHSU5BTF9USEVNRTsKICAgICAgaWYgKHR5cGVvZiB2YWwgIT09ICJzdHJpbmciKSByZXR1cm47CiAgICAgIGNvbnN0IHRoZW1lQ2x1c3RlciA9IHRoaXMuZ2V0VGhlbWVDbHVzdGVyKHZhbC5yZXBsYWNlKCIjIiwgIiIpKTsKICAgICAgY29uc3Qgb3JpZ2luYWxDbHVzdGVyID0gdGhpcy5nZXRUaGVtZUNsdXN0ZXIob2xkVmFsLnJlcGxhY2UoIiMiLCAiIikpOwogICAgICBjb25zb2xlLmxvZyh0aGVtZUNsdXN0ZXIsIG9yaWdpbmFsQ2x1c3Rlcik7CgogICAgICBjb25zdCAkbWVzc2FnZSA9IHRoaXMuJG1lc3NhZ2UoewogICAgICAgIG1lc3NhZ2U6ICIgIENvbXBpbGluZyB0aGUgdGhlbWUiLAogICAgICAgIGN1c3RvbUNsYXNzOiAidGhlbWUtbWVzc2FnZSIsCiAgICAgICAgdHlwZTogInN1Y2Nlc3MiLAogICAgICAgIGR1cmF0aW9uOiAwLAogICAgICAgIGljb25DbGFzczogImVsLWljb24tbG9hZGluZyIKICAgICAgfSk7CgogICAgICBjb25zdCBnZXRIYW5kbGVyID0gKHZhcmlhYmxlLCBpZCkgPT4gewogICAgICAgIHJldHVybiAoKSA9PiB7CiAgICAgICAgICBjb25zdCBvcmlnaW5hbENsdXN0ZXIgPSB0aGlzLmdldFRoZW1lQ2x1c3RlcihPUklHSU5BTF9USEVNRS5yZXBsYWNlKCIjIiwgIiIpKTsKICAgICAgICAgIGNvbnN0IG5ld1N0eWxlID0gdGhpcy51cGRhdGVTdHlsZSh0aGlzW3ZhcmlhYmxlXSwgb3JpZ2luYWxDbHVzdGVyLCB0aGVtZUNsdXN0ZXIpOwoKICAgICAgICAgIGxldCBzdHlsZVRhZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTsKICAgICAgICAgIGlmICghc3R5bGVUYWcpIHsKICAgICAgICAgICAgc3R5bGVUYWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzdHlsZSIpOwogICAgICAgICAgICBzdHlsZVRhZy5zZXRBdHRyaWJ1dGUoImlkIiwgaWQpOwogICAgICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHN0eWxlVGFnKTsKICAgICAgICAgIH0KICAgICAgICAgIHN0eWxlVGFnLmlubmVyVGV4dCA9IG5ld1N0eWxlOwogICAgICAgIH07CiAgICAgIH07CgogICAgICBpZiAoIXRoaXMuY2hhbGspIHsKICAgICAgICBjb25zdCB1cmwgPSBgaHR0cHM6Ly91bnBrZy5jb20vZWxlbWVudC11aUAke3ZlcnNpb259L2xpYi90aGVtZS1jaGFsay9pbmRleC5jc3NgOwogICAgICAgIGF3YWl0IHRoaXMuZ2V0Q1NTU3RyaW5nKHVybCwgImNoYWxrIik7CiAgICAgIH0KCiAgICAgIGNvbnN0IGNoYWxrSGFuZGxlciA9IGdldEhhbmRsZXIoImNoYWxrIiwgImNoYWxrLXN0eWxlIik7CgogICAgICBjaGFsa0hhbmRsZXIoKTsKCiAgICAgIGNvbnN0IHN0eWxlcyA9IFtdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgic3R5bGUiKSkKICAgICAgICAuZmlsdGVyKHN0eWxlID0+IHsKICAgICAgICAgIGNvbnN0IHRleHQgPSBzdHlsZS5pbm5lclRleHQ7CiAgICAgICAgICByZXR1cm4gbmV3IFJlZ0V4cChvbGRWYWwsICJpIikudGVzdCh0ZXh0KSAmJiAhL0NoYWxrIFZhcmlhYmxlcy8udGVzdCh0ZXh0KTsKICAgICAgICB9KTsKICAgICAgc3R5bGVzLmZvckVhY2goc3R5bGUgPT4gewogICAgICAgIGNvbnN0IHsgaW5uZXJUZXh0IH0gPSBzdHlsZTsKICAgICAgICBpZiAodHlwZW9mIGlubmVyVGV4dCAhPT0gInN0cmluZyIpIHJldHVybjsKICAgICAgICBzdHlsZS5pbm5lclRleHQgPSB0aGlzLnVwZGF0ZVN0eWxlKGlubmVyVGV4dCwgb3JpZ2luYWxDbHVzdGVyLCB0aGVtZUNsdXN0ZXIpOwogICAgICB9KTsKCiAgICAgIHRoaXMuJGVtaXQoImNoYW5nZSIsIHZhbCk7CgogICAgICAkbWVzc2FnZS5jbG9zZSgpOwogICAgfQogIH0sCgogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZVN0eWxlKHN0eWxlLCBvbGRDbHVzdGVyLCBuZXdDbHVzdGVyKSB7CiAgICAgIGxldCBuZXdTdHlsZSA9IHN0eWxlOwogICAgICBvbGRDbHVzdGVyLmZvckVhY2goKGNvbG9yLCBpbmRleCkgPT4gewogICAgICAgIG5ld1N0eWxlID0gbmV3U3R5bGUucmVwbGFjZShuZXcgUmVnRXhwKGNvbG9yLCAiaWciKSwgbmV3Q2x1c3RlcltpbmRleF0pOwogICAgICB9KTsKICAgICAgcmV0dXJuIG5ld1N0eWxlOwogICAgfSwKCiAgICBnZXRDU1NTdHJpbmcodXJsLCB2YXJpYWJsZSkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7CiAgICAgICAgY29uc3QgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7CiAgICAgICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9ICgpID0+IHsKICAgICAgICAgIGlmICh4aHIucmVhZHlTdGF0ZSA9PT0gNCAmJiB4aHIuc3RhdHVzID09PSAyMDApIHsKICAgICAgICAgICAgdGhpc1t2YXJpYWJsZV0gPSB4aHIucmVzcG9uc2VUZXh0LnJlcGxhY2UoL0Bmb250LWZhY2V7W159XSt9LywgIiIpOwogICAgICAgICAgICByZXNvbHZlKCk7CiAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICB4aHIub3BlbigiR0VUIiwgdXJsKTsKICAgICAgICB4aHIuc2VuZCgpOwogICAgICB9KTsKICAgIH0sCgogICAgZ2V0VGhlbWVDbHVzdGVyKHRoZW1lKSB7CiAgICAgIGNvbnN0IHRpbnRDb2xvciA9IChjb2xvciwgdGludCkgPT4gewogICAgICAgIGxldCByZWQgPSBwYXJzZUludChjb2xvci5zbGljZSgwLCAyKSwgMTYpOwogICAgICAgIGxldCBncmVlbiA9IHBhcnNlSW50KGNvbG9yLnNsaWNlKDIsIDQpLCAxNik7CiAgICAgICAgbGV0IGJsdWUgPSBwYXJzZUludChjb2xvci5zbGljZSg0LCA2KSwgMTYpOwoKICAgICAgICBpZiAodGludCA9PT0gMCkgeyAvLyB3aGVuIHByaW1hcnkgY29sb3IgaXMgaW4gaXRzIHJnYiBzcGFjZQogICAgICAgICAgcmV0dXJuIFtyZWQsIGdyZWVuLCBibHVlXS5qb2luKCIsIik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJlZCArPSBNYXRoLnJvdW5kKHRpbnQgKiAoMjU1IC0gcmVkKSk7CiAgICAgICAgICBncmVlbiArPSBNYXRoLnJvdW5kKHRpbnQgKiAoMjU1IC0gZ3JlZW4pKTsKICAgICAgICAgIGJsdWUgKz0gTWF0aC5yb3VuZCh0aW50ICogKDI1NSAtIGJsdWUpKTsKCiAgICAgICAgICByZWQgPSByZWQudG9TdHJpbmcoMTYpOwogICAgICAgICAgZ3JlZW4gPSBncmVlbi50b1N0cmluZygxNik7CiAgICAgICAgICBibHVlID0gYmx1ZS50b1N0cmluZygxNik7CgogICAgICAgICAgcmV0dXJuIGAjJHtyZWR9JHtncmVlbn0ke2JsdWV9YDsKICAgICAgICB9CiAgICAgIH07CgogICAgICBjb25zdCBzaGFkZUNvbG9yID0gKGNvbG9yLCBzaGFkZSkgPT4gewogICAgICAgIGxldCByZWQgPSBwYXJzZUludChjb2xvci5zbGljZSgwLCAyKSwgMTYpOwogICAgICAgIGxldCBncmVlbiA9IHBhcnNlSW50KGNvbG9yLnNsaWNlKDIsIDQpLCAxNik7CiAgICAgICAgbGV0IGJsdWUgPSBwYXJzZUludChjb2xvci5zbGljZSg0LCA2KSwgMTYpOwoKICAgICAgICByZWQgPSBNYXRoLnJvdW5kKCgxIC0gc2hhZGUpICogcmVkKTsKICAgICAgICBncmVlbiA9IE1hdGgucm91bmQoKDEgLSBzaGFkZSkgKiBncmVlbik7CiAgICAgICAgYmx1ZSA9IE1hdGgucm91bmQoKDEgLSBzaGFkZSkgKiBibHVlKTsKCiAgICAgICAgcmVkID0gcmVkLnRvU3RyaW5nKDE2KTsKICAgICAgICBncmVlbiA9IGdyZWVuLnRvU3RyaW5nKDE2KTsKICAgICAgICBibHVlID0gYmx1ZS50b1N0cmluZygxNik7CgogICAgICAgIHJldHVybiBgIyR7cmVkfSR7Z3JlZW59JHtibHVlfWA7CiAgICAgIH07CgogICAgICBjb25zdCBjbHVzdGVycyA9IFt0aGVtZV07CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IDk7IGkrKykgewogICAgICAgIGNsdXN0ZXJzLnB1c2godGludENvbG9yKHRoZW1lLCBOdW1iZXIoKGkgLyAxMCkudG9GaXhlZCgyKSkpKTsKICAgICAgfQogICAgICBjbHVzdGVycy5wdXNoKHNoYWRlQ29sb3IodGhlbWUsIDAuMSkpOwogICAgICByZXR1cm4gY2x1c3RlcnM7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/ThemePicker","sourcesContent":["<template>\n  <el-color-picker\n    v-model=\"theme\"\n    :predefine=\"['#409EFF', '#1890ff', '#304156','#212121','#11a983', '#13c2c2', '#6959CD', '#f5222d', ]\"\n    class=\"theme-picker\"\n    popper-class=\"theme-picker-dropdown\"\n  />\n</template>\n\n<script>\nconst version = require(\"element-ui/package.json\").version; // element-ui version from node_modules\nconst ORIGINAL_THEME = \"#409EFF\"; // default color\n\nexport default {\n  data() {\n    return {\n      chalk: \"\", // content of theme-chalk css\n      theme: \"\"\n    };\n  },\n  computed: {\n    defaultTheme() {\n      return this.$store.state.settings.theme;\n    }\n  },\n  watch: {\n    defaultTheme: {\n      handler: function(val, oldVal) {\n        this.theme = val;\n      },\n      immediate: true\n    },\n    async theme(val) {\n      const oldVal = this.chalk ? this.theme : ORIGINAL_THEME;\n      if (typeof val !== \"string\") return;\n      const themeCluster = this.getThemeCluster(val.replace(\"#\", \"\"));\n      const originalCluster = this.getThemeCluster(oldVal.replace(\"#\", \"\"));\n      console.log(themeCluster, originalCluster);\n\n      const $message = this.$message({\n        message: \"  Compiling the theme\",\n        customClass: \"theme-message\",\n        type: \"success\",\n        duration: 0,\n        iconClass: \"el-icon-loading\"\n      });\n\n      const getHandler = (variable, id) => {\n        return () => {\n          const originalCluster = this.getThemeCluster(ORIGINAL_THEME.replace(\"#\", \"\"));\n          const newStyle = this.updateStyle(this[variable], originalCluster, themeCluster);\n\n          let styleTag = document.getElementById(id);\n          if (!styleTag) {\n            styleTag = document.createElement(\"style\");\n            styleTag.setAttribute(\"id\", id);\n            document.head.appendChild(styleTag);\n          }\n          styleTag.innerText = newStyle;\n        };\n      };\n\n      if (!this.chalk) {\n        const url = `https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css`;\n        await this.getCSSString(url, \"chalk\");\n      }\n\n      const chalkHandler = getHandler(\"chalk\", \"chalk-style\");\n\n      chalkHandler();\n\n      const styles = [].slice.call(document.querySelectorAll(\"style\"))\n        .filter(style => {\n          const text = style.innerText;\n          return new RegExp(oldVal, \"i\").test(text) && !/Chalk Variables/.test(text);\n        });\n      styles.forEach(style => {\n        const { innerText } = style;\n        if (typeof innerText !== \"string\") return;\n        style.innerText = this.updateStyle(innerText, originalCluster, themeCluster);\n      });\n\n      this.$emit(\"change\", val);\n\n      $message.close();\n    }\n  },\n\n  methods: {\n    updateStyle(style, oldCluster, newCluster) {\n      let newStyle = style;\n      oldCluster.forEach((color, index) => {\n        newStyle = newStyle.replace(new RegExp(color, \"ig\"), newCluster[index]);\n      });\n      return newStyle;\n    },\n\n    getCSSString(url, variable) {\n      return new Promise(resolve => {\n        const xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = () => {\n          if (xhr.readyState === 4 && xhr.status === 200) {\n            this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, \"\");\n            resolve();\n          }\n        };\n        xhr.open(\"GET\", url);\n        xhr.send();\n      });\n    },\n\n    getThemeCluster(theme) {\n      const tintColor = (color, tint) => {\n        let red = parseInt(color.slice(0, 2), 16);\n        let green = parseInt(color.slice(2, 4), 16);\n        let blue = parseInt(color.slice(4, 6), 16);\n\n        if (tint === 0) { // when primary color is in its rgb space\n          return [red, green, blue].join(\",\");\n        } else {\n          red += Math.round(tint * (255 - red));\n          green += Math.round(tint * (255 - green));\n          blue += Math.round(tint * (255 - blue));\n\n          red = red.toString(16);\n          green = green.toString(16);\n          blue = blue.toString(16);\n\n          return `#${red}${green}${blue}`;\n        }\n      };\n\n      const shadeColor = (color, shade) => {\n        let red = parseInt(color.slice(0, 2), 16);\n        let green = parseInt(color.slice(2, 4), 16);\n        let blue = parseInt(color.slice(4, 6), 16);\n\n        red = Math.round((1 - shade) * red);\n        green = Math.round((1 - shade) * green);\n        blue = Math.round((1 - shade) * blue);\n\n        red = red.toString(16);\n        green = green.toString(16);\n        blue = blue.toString(16);\n\n        return `#${red}${green}${blue}`;\n      };\n\n      const clusters = [theme];\n      for (let i = 0; i <= 9; i++) {\n        clusters.push(tintColor(theme, Number((i / 10).toFixed(2))));\n      }\n      clusters.push(shadeColor(theme, 0.1));\n      return clusters;\n    }\n  }\n};\n</script>\n\n<style>\n.theme-message,\n.theme-picker-dropdown {\n  z-index: 99999 !important;\n}\n\n.theme-picker .el-color-picker__trigger {\n  height: 26px !important;\n  width: 26px !important;\n  padding: 2px;\n}\n\n.theme-picker-dropdown .el-color-dropdown__link-btn {\n  display: none;\n}\n</style>\n"]}]}