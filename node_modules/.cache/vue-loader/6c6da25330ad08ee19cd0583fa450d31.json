{"remainingRequest":"/Users/jayson/Desktop/work/DDM-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jayson/Desktop/work/DDM-admin/src/views/admin/monitor/celery/periodic-task/edit-form-periodic-task.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/jayson/Desktop/work/DDM-admin/src/views/admin/monitor/celery/periodic-task/edit-form-periodic-task.vue","mtime":1720245294017},{"path":"/Users/jayson/Desktop/work/DDM-admin/node_modules/cache-loader/dist/cjs.js","mtime":1720245288376},{"path":"/Users/jayson/Desktop/work/DDM-admin/node_modules/babel-loader/lib/index.js","mtime":1720245285342},{"path":"/Users/jayson/Desktop/work/DDM-admin/node_modules/cache-loader/dist/cjs.js","mtime":1720245288376},{"path":"/Users/jayson/Desktop/work/DDM-admin/node_modules/vue-loader/lib/index.js","mtime":1720245293567}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIFN5bmNEYXRhQXBpIGZyb20gIkAvYXBpL2FkbWluL21vbml0b3IvY2VsZXJ5IjsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBlbnRpdHk6IHsgdHlwZTogT2JqZWN0LCBkZWZhdWx0OiBudWxsIH0sCiAgICB2YWx1ZTogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiBudWxsIH0sCiAgICBjcmVhdGU6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogZmFsc2UgfSwKICAgIHdpZHRoOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogIjUwJSIgfSwKICAgIHRhZ3M6IHsgdHlwZTogQXJyYXksIGRlZmF1bHQ6ICgpID0+IFtdIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIGZvcm06IHsKICAgICAgICB0YXNrOiAiIiwKICAgICAgICBuYW1lOiAiIiwKICAgICAgICBpbnRlcnZhbDogIiIsCiAgICAgICAgY3JvbnRhYjogIiIsCiAgICAgICAgZGF0ZTogIiIsCiAgICAgICAgZW5hYmxlZDogZmFsc2UKICAgICAgfSwKICAgICAgdGFza3NfYXNfY2hvaWNlczogW10sCiAgICAgIENyb250YWI6IFtdLAogICAgICBJbnRlcnZhbDogW10KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgZGlhbG9nVGl0bGUoKSB7CiAgICAgIHJldHVybiB0aGlzLmNyZWF0ZSA/ICLmlrDlop7ku7vliqEiIDogIue8lui+keS7u+WKoSI7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgdmFsdWUodmFsKSB7CiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHZhbDsKICAgIH0sCiAgICBkaWFsb2dWaXNpYmxlKHZhbCkgewogICAgICB0aGlzLiRlbWl0KCJpbnB1dCIsIHZhbCk7CiAgICAgIGlmICghdGhpcy5Dcm9udGFiWzBdKSB7CiAgICAgICAgdGhpcy5Dcm9udGFiID0gdGhpcy4kc3RvcmUuc3RhdGUuQ3JvbnRhYjsKICAgICAgICBjb25zb2xlLmxvZygxLCB0aGlzLkNyb250YWIpOwogICAgICB9CiAgICAgIGlmICghdGhpcy5JbnRlcnZhbFswXSkgewogICAgICAgIHRoaXMuSW50ZXJ2YWwgPSB0aGlzLiRzdG9yZS5zdGF0ZS5JbnRlcnZhbDsKICAgICAgICBjb25zb2xlLmxvZygyLCB0aGlzLkludGVydmFsKTsKICAgICAgfQogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIC8vIOiOt+WPluaJgOaciSB0YXNrcyDlkI3np7AKICAgIFN5bmNEYXRhQXBpLlRhc2tzQXNDaG9pY2VzKCkudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgdGhpcy50YXNrc19hc19jaG9pY2VzID0gcmVzcG9uc2UuZGF0YSB8fCBbXTsKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgcXVlcnlTZWFyY2gocXVlcnlTdHJpbmcsIGNiKSB7CiAgICAgIHZhciByZXN0YXVyYW50cyA9IHRoaXMudGFza3NfYXNfY2hvaWNlczsKICAgICAgdmFyIHJlc3VsdHMgPSBxdWVyeVN0cmluZyA/IHJlc3RhdXJhbnRzLmZpbHRlcih0aGlzLmNyZWF0ZUZpbHRlcihxdWVyeVN0cmluZykpIDogcmVzdGF1cmFudHM7CiAgICAgIC8vIOiwg+eUqCBjYWxsYmFjayDov5Tlm57lu7rorq7liJfooajnmoTmlbDmja4KICAgICAgY2IocmVzdWx0cyk7CiAgICB9LCBjcmVhdGVGaWx0ZXIocXVlcnlTdHJpbmcpIHsKICAgICAgcmV0dXJuIChyZXN0YXVyYW50KSA9PiB7CiAgICAgICAgcmV0dXJuIChyZXN0YXVyYW50LnRvTG93ZXJDYXNlKCkuaW5kZXhPZihxdWVyeVN0cmluZy50b0xvd2VyQ2FzZSgpKSAhPT0gLTEpOwogICAgICB9OwogICAgfSwKICAgIGhhbmRsZVNlbGVjdChpdGVtKSB7CiAgICAgIHRoaXMuZm9ybS50YXNrID0gaXRlbTsKICAgIH0sCiAgICBkaWFsb2dPcGVuKCkgewogICAgICAvLyDkuLpUcnVl5oSP5ZGz552A5piv6YCa6L+H6YGN5Y+K5pa55byP5omT5byA5a+56K+d5qGGCiAgICAgIGlmICghdGhpcy5jcmVhdGUpIHsKICAgICAgICB0aGlzLmZvcm0gPSB7IC4uLnRoaXMuZW50aXR5IH07CiAgICAgIH0KICAgIH0sCiAgICBoYW5kbGVTdWJtaXQoKSB7CiAgICAgIHRoaXMuJHJlZnNbImZvcm0iXS52YWxpZGF0ZSgodmFsaWQpID0+IHsKICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgICAgICBjb25zdCBkYXRhID0geyAuLi50aGlzLmZvcm0gfTsKICAgICAgICAgIGlmICh0aGlzLmNyZWF0ZSkgewogICAgICAgICAgICBkZWxldGUgZGF0YVsiaW5zdGFuY2VJZCJdOwogICAgICAgICAgICBTeW5jRGF0YUFwaS5jcmVhdGVQZXJpb2RpY1Rhc2soZGF0YSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgdGhpcy4kZW1pdCgic3VjY2VzcyIsIHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgIHRoaXMuZGlhbG9nQ2xvc2UoKTsKICAgICAgICAgICAgICB0aGlzLm1zZ1N1Y2Nlc3MoIuaWsOWinuaIkOWKnyEiKTsKICAgICAgICAgICAgfSkuY2F0Y2goKCkgPT4gewogICAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIFN5bmNEYXRhQXBpLnVwZGF0ZVBlcmlvZGljVGFzayhkYXRhKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICB0aGlzLiRlbWl0KCJzdWNjZXNzIiwgcmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgdGhpcy5tc2dTdWNjZXNzKCLmm7TmlrDmiJDlip8hIik7CiAgICAgICAgICAgICAgdGhpcy5kaWFsb2dDbG9zZSgpOwogICAgICAgICAgICB9KS5jYXRjaCgoKSA9PiB7CiAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBkaWFsb2dDbG9zZSgpIHsKICAgICAgdGhpcy4kcmVmc1siZm9ybSJdLnJlc2V0RmllbGRzKCk7CiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IGZhbHNlOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["edit-form-periodic-task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"edit-form-periodic-task.vue","sourceRoot":"src/views/admin/monitor/celery/periodic-task","sourcesContent":["<!--\n@author: xuchi\n@description: 接口编辑组件\n-->\n<template>\n  <small-dialog\n    ref=\"dialog\"\n    v-model=\"dialogVisible\"\n    :dialog-title=\"dialogTitle\"\n    :width=\"width\"\n    :close-on-click-modal=\"false\"\n    :append-to-body=\"true\"\n    icon=\"svg:icon-interface\"\n    @confirm=\"handleSubmit\"\n    @closed=\"dialogClose\"\n    @opened=\"dialogOpen\"\n  >\n    <el-form ref=\"form\" v-loading=\"loading\" :model=\"form\" :size=\"$ELEMENT.size\" label-width=\"120px\">\n      <el-form-item :rules=\"[{ required: true, message: '任务不能为空'}]\" label=\"celery任务:\" prop=\"task\">\n        <el-autocomplete\n          v-model=\"form.task\"\n          :fetch-suggestions=\"querySearch\"\n          class=\"inline-input\"\n          filterable\n          placeholder=\"celery任务\"\n          style=\"width: 400px;\"\n          @select=\"handleSelect\"\n        >\n          <template slot-scope=\"{ item }\">\n            <div class=\"name\">{{ item }}</div>\n          </template>\n        </el-autocomplete>\n      </el-form-item>\n      <el-form-item :rules=\"[{ required: true, message: '名称不能为空'}]\" prop=\"name\" label=\"名称:\">\n        <el-input v-model=\"form.name\" placeholder=\"例如: XXX同步任务\" style=\"width: 400px;\" />\n      </el-form-item>\n      <el-form-item prop=\"interval\" label=\"任务频率:\">\n        <el-select v-model=\"form.interval\" placeholder=\"请选择任务频率\" style=\"width: 400px;\" @change=\"form.crontab = ''\">\n          <el-option\n            v-for=\"(item,index) in Interval\"\n            :key=\"index\"\n            :label=\"getIntervalData(item)\"\n            :value=\"item.id\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item prop=\"crontab\" label=\"任务定时:\">\n        <el-select v-model=\"form.crontab\" placeholder=\"请选择任务定时\" style=\"width: 400px;\" @change=\"form.interval = ''\">\n          <el-option\n            v-for=\"(item,index) in Crontab\"\n            :key=\"index\"\n            :label=\"getCrontabData(item)\"\n            :value=\"item.id\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item prop=\"enabled\" label=\"是否开启:\">\n        <template>\n          <el-radio-group v-model=\"form.enabled\">\n            <el-radio :label=\"true\">是</el-radio>\n            <el-radio :label=\"false\">否</el-radio>\n          </el-radio-group>\n        </template>\n      </el-form-item>\n    </el-form>\n  </small-dialog>\n</template>\n<script>\nimport * as SyncDataApi from \"@/api/admin/monitor/celery\";\nexport default {\n  props: {\n    entity: { type: Object, default: null },\n    value: { type: Boolean, default: null },\n    create: { type: Boolean, default: false },\n    width: { type: String, default: \"50%\" },\n    tags: { type: Array, default: () => [] }\n  },\n  data() {\n    return {\n      loading: false,\n      dialogVisible: false,\n      form: {\n        task: \"\",\n        name: \"\",\n        interval: \"\",\n        crontab: \"\",\n        date: \"\",\n        enabled: false\n      },\n      tasks_as_choices: [],\n      Crontab: [],\n      Interval: []\n    };\n  },\n  computed: {\n    dialogTitle() {\n      return this.create ? \"新增任务\" : \"编辑任务\";\n    }\n  },\n  watch: {\n    value(val) {\n      this.dialogVisible = val;\n    },\n    dialogVisible(val) {\n      this.$emit(\"input\", val);\n      if (!this.Crontab[0]) {\n        this.Crontab = this.$store.state.Crontab;\n        console.log(1, this.Crontab);\n      }\n      if (!this.Interval[0]) {\n        this.Interval = this.$store.state.Interval;\n        console.log(2, this.Interval);\n      }\n    }\n  },\n  created() {\n    // 获取所有 tasks 名称\n    SyncDataApi.TasksAsChoices().then((response) => {\n      this.tasks_as_choices = response.data || [];\n    });\n  },\n  methods: {\n    querySearch(queryString, cb) {\n      var restaurants = this.tasks_as_choices;\n      var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants;\n      // 调用 callback 返回建议列表的数据\n      cb(results);\n    }, createFilter(queryString) {\n      return (restaurant) => {\n        return (restaurant.toLowerCase().indexOf(queryString.toLowerCase()) !== -1);\n      };\n    },\n    handleSelect(item) {\n      this.form.task = item;\n    },\n    dialogOpen() {\n      // 为True意味着是通过遍及方式打开对话框\n      if (!this.create) {\n        this.form = { ...this.entity };\n      }\n    },\n    handleSubmit() {\n      this.$refs[\"form\"].validate((valid) => {\n        if (valid) {\n          this.loading = true;\n          const data = { ...this.form };\n          if (this.create) {\n            delete data[\"instanceId\"];\n            SyncDataApi.createPeriodicTask(data).then(response => {\n              this.loading = false;\n              this.$emit(\"success\", response.data);\n              this.dialogClose();\n              this.msgSuccess(\"新增成功!\");\n            }).catch(() => {\n              this.loading = false;\n            });\n          } else {\n            SyncDataApi.updatePeriodicTask(data).then(response => {\n              this.$emit(\"success\", response.data);\n              this.loading = false;\n              this.msgSuccess(\"更新成功!\");\n              this.dialogClose();\n            }).catch(() => {\n              this.loading = false;\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    dialogClose() {\n      this.$refs[\"form\"].resetFields();\n      this.dialogVisible = false;\n    }\n  }\n};\n</script>\n<style>\n    .el-picker-panel {\n        color: #606266;\n        border: 1px solid #E4E7ED;\n        -webkit-box-shadow: 0 2px 12px 0 rgba(0,0,0,.1);\n        box-shadow: 0 2px 12px 0 rgba(0,0,0,.1);\n        background: #FFF;\n        border-radius: 4px;\n        line-height: 5px!important;\n        margin: 5px 0;\n    }\n    .el-picker-panel__content {\n         margin: 15px;\n    }\n</style>\n\n"]}]}