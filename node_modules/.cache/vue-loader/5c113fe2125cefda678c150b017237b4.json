{"remainingRequest":"/Users/jayson/Desktop/work/DDM-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jayson/Desktop/work/DDM-admin/src/views/admin/member/user/index.vue?vue&type=style&index=0&id=3e1012b9&lang=scss","dependencies":[{"path":"/Users/jayson/Desktop/work/DDM-admin/src/views/admin/member/user/index.vue","mtime":1720848467960},{"path":"/Users/jayson/Desktop/work/DDM-admin/node_modules/css-loader/dist/cjs.js","mtime":1720245289027},{"path":"/Users/jayson/Desktop/work/DDM-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1720245293567},{"path":"/Users/jayson/Desktop/work/DDM-admin/node_modules/postcss-loader/src/index.js","mtime":1720245291982},{"path":"/Users/jayson/Desktop/work/DDM-admin/node_modules/sass-loader/dist/cjs.js","mtime":1720245292806},{"path":"/Users/jayson/Desktop/work/DDM-admin/node_modules/cache-loader/dist/cjs.js","mtime":1720245288376},{"path":"/Users/jayson/Desktop/work/DDM-admin/node_modules/vue-loader/lib/index.js","mtime":1720245293567}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVsLWNvbC0yMCB7CiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAodA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/admin/member/user","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <el-row>\n            <!--用户数据-->\n            <el-col :span=\"20\" :xs=\"24\">\n                <el-form v-show=\"showSearch\" ref=\"queryForm\" :model=\"queryParams\" :inline=\"true\" label-width=\"68px\">\n                    <el-form-item label=\"用户名称\" prop=\"username\">\n                        <el-input v-model=\"queryParams.username\" placeholder=\"请输入用户名称\" clearable size=\"small\"\n                            style=\"width: 240px\" @keyup.enter.native=\"handleQuery\" />\n                    </el-form-item>\n                    <el-form-item label=\"手机号码\" prop=\"mobile\">\n                        <el-input v-model=\"queryParams.mobile\" placeholder=\"请输入手机号码\" clearable size=\"small\"\n                            style=\"width: 240px\" @keyup.enter.native=\"handleQuery\" />\n                    </el-form-item>\n                    <el-form-item label=\"状态\" prop=\"is_active\">\n                        <el-select v-model=\"queryParams.is_active\" placeholder=\"用户状态\" clearable size=\"small\"\n                            style=\"width: 240px\">\n                            <el-option v-for=\"dict in statusOptions\" :key=\"dict.dictValue\" :label=\"dict.dictLabel\"\n                                :value=\"dict.dictValue\" />\n                        </el-select>\n                    </el-form-item>\n                    <el-form-item v-if=\"false\" label=\"创建时间\">\n                        <el-date-picker v-model=\"dateRange\" size=\"small\" style=\"width: 240px\" value-format=\"yyyy-MM-dd\"\n                            type=\"daterange\" range-separator=\"-\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\" />\n                    </el-form-item>\n                    <el-form-item>\n                        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n                        <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n                    </el-form-item>\n                </el-form>\n\n                <el-row :gutter=\"10\" class=\"mb8\">\n                    <el-col :span=\"1.5\">\n                        <el-button v-hasPermi=\"['permission:user:post']\" type=\"primary\" plain icon=\"el-icon-plus\"\n                            size=\"mini\" @click=\"handleAdd\">新增\n                        </el-button>\n                    </el-col>\n                    <el-col :span=\"1.5\">\n                        <el-button v-hasPermi=\"['permission:user:{id}:put']\" type=\"success\" plain icon=\"el-icon-edit\"\n                            size=\"mini\" :disabled=\"single\" @click=\"handleUpdate\">修改\n                        </el-button>\n                    </el-col>\n                    <el-col :span=\"1.5\">\n                        <el-button v-hasPermi=\"['permission:user:{id}:delete']\" type=\"danger\" plain\n                            icon=\"el-icon-delete\" size=\"mini\" :disabled=\"multiple\" @click=\"handleDelete\">删除\n                        </el-button>\n                    </el-col>\n                    <right-toolbar :show-search.sync=\"showSearch\" @queryTable=\"getList\" />\n                </el-row>\n\n                <el-table v-loading=\"loading\" :data=\"userList\" @selection-change=\"handleSelectionChange\">\n                    <el-table-column type=\"selection\" width=\"50\" align=\"center\" />\n                    <el-table-column key=\"id\" label=\"用户编号\" align=\"center\" prop=\"id\" />\n                    <el-table-column key=\"username\" label=\"用户名\" align=\"center\" prop=\"username\"\n                        :show-overflow-tooltip=\"true\" />\n                    <el-table-column key=\"userUrl\" label=\"用户链接\" align=\"center\" prop=\"username\"\n                        :show-overflow-tooltip=\"true\" />\n                    <el-table-column key=\"name\" label=\"用户昵称\" align=\"center\" prop=\"name\" :show-overflow-tooltip=\"true\" />\n                    <el-table-column key=\"inviteCode\" label=\"邀请码\" align=\"center\" prop=\"inviteCode\"\n                        :show-overflow-tooltip=\"true\" />\n                    <el-table-column key=\"parent\" label=\"上级\" align=\"center\" prop=\"parent\"\n                        :show-overflow-tooltip=\"true\" />\n                    <el-table-column key=\"mobile\" label=\"手机号码\" align=\"center\" prop=\"mobile\" width=\"120\" />\n                    <el-table-column key=\"is_active\" label=\"状态\" align=\"center\">\n                        <template slot-scope=\"scope\">\n                            <el-switch v-model=\"scope.row.is_active\" disabled @change=\"handleStatusChange(scope.row)\" />\n                        </template>\n                    </el-table-column>\n                    <el-table-column label=\"创建时间\" align=\"center\" prop=\"create_datetime\" width=\"160\">\n                        <template slot-scope=\"scope\">\n                            <span>{{ parseTime(scope.row.create_datetime) }}</span>\n                        </template>\n                    </el-table-column>\n                    <el-table-column\n                        v-if=\"hasPermi(['permission:user:{id}:put', 'permission:user:{id}:delete', 'permission:user:resetpwd:put'])\"\n                        label=\"操作\" align=\"center\" width=\"160\" class-name=\"small-padding fixed-width\">\n                        <template slot-scope=\"scope\">\n                            <el-button v-hasPermi=\"['permission:user:{id}:put']\" size=\"mini\" type=\"text\"\n                                icon=\"el-icon-edit\" @click=\"handleUpdate(scope.row)\">修改\n                            </el-button>\n\n                        </template>\n                    </el-table-column>\n                </el-table>\n\n                <pagination v-show=\"total > 0\" :total=\"total\" :page.sync=\"queryParams.pageNum\"\n                    :limit.sync=\"queryParams.pageSize\" @pagination=\"getList\" />\n            </el-col>\n        </el-row>\n\n        <!-- 添加或修改参数配置对话框 -->\n        <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"600px\" append-to-body>\n            <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n                <el-row>\n                    <el-col :span=\"12\">\n                        <el-form-item label=\"用户昵称\" prop=\"name\">\n                            <el-input v-model=\"form.name\" placeholder=\"请输入用户昵称\" />\n                        </el-form-item>\n                    </el-col>\n                </el-row>\n                <el-row>\n                    <el-col :span=\"12\">\n                        <el-form-item label=\"手机号码\" prop=\"mobile\">\n                            <el-input v-model=\"form.mobile\" placeholder=\"请输入手机号码\" maxlength=\"11\" />\n                        </el-form-item>\n                    </el-col>\n                    <el-col :span=\"12\">\n                        <el-form-item label=\"邮箱\" prop=\"email\">\n                            <el-input v-model=\"form.email\" placeholder=\"请输入邮箱\" maxlength=\"50\" />\n                        </el-form-item>\n                    </el-col>\n                </el-row>\n                <el-row>\n                    <el-col :span=\"12\">\n                        <el-form-item v-if=\"form.id == undefined\" label=\"用户名称\" prop=\"username\">\n                            <el-input v-model=\"form.username\" placeholder=\"请输入用户名称\" />\n                        </el-form-item>\n                    </el-col>\n                    <el-col :span=\"12\">\n                        <el-form-item v-if=\"form.id == undefined\" label=\"用户密码\" prop=\"password\">\n                            <el-input v-model=\"form.password\" placeholder=\"请输入用户密码\" type=\"password\" />\n                        </el-form-item>\n                    </el-col>\n                </el-row>\n                <el-row>\n                    <el-col :span=\"12\">\n                        <el-form-item label=\"状态\">\n                            <el-radio-group v-model=\"form.is_active\">\n                                <el-radio v-for=\"dict in statusOptions\" :key=\"dict.dictValue\" :label=\"dict.dictValue\">{{\n                                    dict.dictLabel }}\n                                </el-radio>\n                            </el-radio-group>\n                        </el-form-item>\n                    </el-col>\n                </el-row>\n                <el-row>\n                    <el-col :span=\"24\">\n                        <el-form-item label=\"备注\">\n                            <el-input v-model=\"form.remark\" type=\"textarea\" placeholder=\"请输入内容\" />\n                        </el-form-item>\n                    </el-col>\n                </el-row>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n                <el-button @click=\"cancel\">取 消</el-button>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport {\n    addUser,\n    changeUserStatus,\n    getUser,\n    listUser,\n    updateUser\n} from \"@/api/admin/member/user\";\nimport { getToken } from \"@/utils/auth\";\nimport Treeselect from \"@riophae/vue-treeselect\";\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\n\nexport default {\n    name: \"User\",\n    components: { Treeselect },\n    data() {\n        return {\n            // 遮罩层\n            loading: true,\n            // 选中数组\n            ids: [],\n            // 非单个禁用\n            single: true,\n            // 非多个禁用\n            multiple: true,\n            // 显示搜索条件\n            showSearch: true,\n            // 总条数\n            total: 0,\n            // 用户表格数据\n            userList: null,\n            // 弹出层标题\n            title: \"\",\n            // 是否显示弹出层\n            open: false,\n            // 默认密码\n            initPassword: undefined,\n            // 日期范围\n            dateRange: [],\n            // 状态数据字典\n            statusOptions: [{ dictLabel: \"正常\", dictValue: true }, { dictLabel: \"停用\", dictValue: false }],\n            // 性别状态字典\n            sexOptions: [],\n            // 岗位选项\n            postOptions: [],\n            // 角色选项\n            roleOptions: [],\n            // 表单参数\n            form: {},\n            defaultProps: {\n                children: \"children\",\n                label: \"label\"\n            },\n            // 用户导入参数\n            upload: {\n                // 是否显示弹出层（用户导入）\n                open: false,\n                // 弹出层标题（用户导入）\n                title: \"\",\n                // 是否禁用上传\n                isUploading: false,\n                // 是否更新已经存在的用户数据\n                updateSupport: 0,\n                // 设置上传的请求头部\n                headers: { Authorization: \"Bearer \" + getToken() },\n                // 上传的地址\n                url: process.env.VUE_APP_BASE_API + \"/admin/system/savefile/\"\n            },\n            // 查询参数\n            queryParams: {\n                pageNum: 1,\n                pageSize: 10,\n                username: undefined,\n                mobile: undefined,\n                is_active: undefined,\n            },\n            // 列信息\n            // columns: [\n            //     { key: 0, label: `序号`, visible: false },\n            //     { key: 1, label: `用户名称`, visible: true },\n            //     { key: 2, label: `用户昵称`, visible: true },\n            //     { key: 3, label: `邀请码`, visible: true },\n            //     { key: 4, label: `上级`, visible: true },\n            //     { key: 5, label: `手机号码`, visible: true },\n            //     { key: 6, label: `状态`, visible: true },\n            //     { key: 7, label: `创建时间`, visible: true }\n            // ],\n            // 表单校验\n            rules: {\n                username: [\n                    { required: true, message: \"用户名称不能为空\", trigger: \"blur\" }\n                ],\n                name: [\n                    { required: true, message: \"用户昵称不能为空\", trigger: \"blur\" }\n                ],\n                password: [\n                    { required: true, message: \"用户密码不能为空\", trigger: \"blur\" }\n                ],\n                email: [\n                    {\n                        type: \"email\",\n                        message: \"'请输入正确的邮箱地址\",\n                        trigger: [\"blur\", \"change\"]\n                    }\n                ],\n                mobile: [\n                    {\n                        pattern: /^1[3|4|5|6|7|8|9][0-9]\\d{8}$/,\n                        message: \"请输入正确的手机号码\",\n                        trigger: \"blur\"\n                    }\n                ]\n            }\n        };\n    },\n    watch: {\n\n    },\n    created() {\n        this.getList();\n        // this.getDicts(\"sys_normal_disable\").then(response => {\n        //   this.statusOptions = response.data;\n        // });\n        this.getDicts(\"sys_user_sex\").then(response => {\n            this.sexOptions = response.data;\n        });\n        this.getConfigKey(\"sys.user.initPassword\").then(response => {\n            this.initPassword = response.msg;\n        });\n    },\n    methods: {\n        /** 查询用户列表 */\n        getList() {\n            this.loading = true;\n            listUser(this.addDateRange(this.queryParams, this.dateRange)).then(response => {\n                this.userList = response.data.results;\n                this.total = response.data.count;\n                this.loading = false;\n            }\n            );\n        },\n\n        // 筛选节点\n        filterNode(value, data) {\n            if (!value) return true;\n            return data.label.indexOf(value) !== -1;\n        },\n\n        // 用户状态修改\n        handleStatusChange(row) {\n            const text = row.is_active === true ? \"启用\" : \"停用\";\n            this.$confirm('确认要\"' + text + '\"\"' + row.username + '\"用户吗?', \"警告\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\"\n            }).then(function () {\n                return changeUserStatus(row.id, row.is_active);\n            }).then(() => {\n                this.msgSuccess(text + \"成功\");\n            }).catch(function () {\n                row.is_active = row.is_active === false;\n            });\n        },\n        // 取消按钮\n        cancel() {\n            this.open = false;\n            this.reset();\n        },\n        // 表单重置\n        reset() {\n            this.form = {\n                id: undefined,\n                username: undefined,\n                name: undefined,\n                password: undefined,\n                mobile: undefined,\n                email: undefined,\n                gender: undefined,\n                is_active: false,\n                remark: undefined,\n                postIds: [],\n                roleIds: []\n            };\n            this.resetForm(\"form\");\n        },\n        /** 搜索按钮操作 */\n        handleQuery() {\n            this.queryParams.page = 1;\n            this.getList();\n        },\n        /** 重置按钮操作 */\n        resetQuery() {\n            this.dateRange = [];\n            this.resetForm(\"queryForm\");\n            this.handleQuery();\n        },\n        // 多选框选中数据\n        handleSelectionChange(selection) {\n            this.ids = selection.map(item => item.id);\n            this.single = selection.length !== 1;\n            this.multiple = !selection.length;\n        },\n        /** 新增按钮操作 */\n        handleAdd() {\n            this.reset();\n            getUser().then(response => {\n                this.postOptions = response.data.posts;\n                this.roleOptions = response.data.roles;\n                this.open = true;\n                this.title = \"添加用户\";\n                this.form.password = this.initPassword;\n            });\n        },\n        /** 修改按钮操作 */\n        handleUpdate(row) {\n            this.reset();\n            const id = row.id || this.ids;\n            getUser(id).then(response => {\n                const data = response.data.data;\n                this.form = data;\n                this.open = true;\n                this.title = \"修改用户\";\n            });\n        },\n        /** 重置密码按钮操作 */\n        handleResetPwd(row) {\n            this.$prompt('请输入\"' + row.username + '\"的新密码', \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\"\n            }).then(({ value }) => {\n                resetUserPwd(row.id, value).then(response => {\n                    this.msgSuccess(\"修改成功，新密码是：\" + value);\n                });\n            }).catch(() => {\n            });\n        },\n        /** 提交按钮 */\n        submitForm: function () {\n            this.$refs[\"form\"].validate(valid => {\n                if (valid) {\n                    if (this.form.id !== undefined) {\n                        updateUser(this.form).then(response => {\n                            this.msgSuccess(\"修改成功\");\n                            this.open = false;\n                            this.getList();\n                        });\n                    } else {\n                        addUser(this.form).then(response => {\n                            this.msgSuccess(\"新增成功\");\n                            this.open = false;\n                            this.getList();\n                        });\n                    }\n                }\n            });\n        },\n        /** 删除按钮操作 */\n        handleDelete(row) {\n            const userIds = row.id || this.ids;\n            this.$confirm('是否确认删除用户编号为\"' + userIds + '\"的数据项?', \"警告\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\"\n            }).then(function () {\n                return delUser(userIds);\n            }).then(() => {\n                this.getList();\n                this.msgSuccess(\"删除成功\");\n            });\n        },\n        /** 导出按钮操作 */\n        handleExport() {\n            const queryParams = this.queryParams;\n            this.$confirm(\"是否确认导出所有用户数据项?\", \"警告\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\"\n            }).then(function () {\n                return exportUser(queryParams);\n            }).then(response => {\n                this.download(response.data.file_url, response.data.name);\n            });\n        },\n        /** 导入按钮操作 */\n        handleImport() {\n            this.upload.title = \"用户导入\";\n            this.upload.open = true;\n        },\n        /** 下载模板操作 */\n        importTemplate() {\n            importTemplate().then(response => {\n                this.download(response.data.file_url, response.data.name);\n            });\n        },\n        // 文件上传中处理\n        handleFileUploadProgress(event, file, fileList) {\n            this.upload.isUploading = true;\n        },\n        // 文件上传成功处理\n        handleFileSuccess(response, file, fileList) {\n            this.upload.open = false;\n            this.upload.isUploading = false;\n            this.$refs.upload.clearFiles();\n            // 是否更新已经存在的用户数据\n            importsUser({ file_url: response.data.file_url, updateSupport: this.upload.updateSupport }).then(response => {\n                this.$alert(\"导入成功！\", \"导入结果\", { dangerouslyUseHTMLString: true });\n                this.getList();\n            });\n        },\n        // 提交上传文件\n        submitFileForm() {\n            this.$refs.upload.submit();\n        }\n    }\n};\n</script>\n<style lang=\"scss\">\n.el-col-20 {\n    width: 100% !important;\n}\n</style>"]}]}