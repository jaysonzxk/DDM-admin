{"remainingRequest":"/Users/mac/Desktop/DDM-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Desktop/DDM-admin/src/views/admin/monitor/celery/interval-task/interval-index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/mac/Desktop/DDM-admin/src/views/admin/monitor/celery/interval-task/interval-index.vue","mtime":1702065174000},{"path":"/Users/mac/Desktop/DDM-admin/node_modules/cache-loader/dist/cjs.js","mtime":1703645363792},{"path":"/Users/mac/Desktop/DDM-admin/node_modules/babel-loader/lib/index.js","mtime":1703645364828},{"path":"/Users/mac/Desktop/DDM-admin/node_modules/cache-loader/dist/cjs.js","mtime":1703645363792},{"path":"/Users/mac/Desktop/DDM-admin/node_modules/vue-loader/lib/index.js","mtime":1703645365038}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIFN5bmNEYXRhQXBpIGZyb20gIkAvYXBpL2FkbWluL21vbml0b3IvY2VsZXJ5IjsKaW1wb3J0IEVkaXRGb3JtSW50ZXJ2YWxUYXNrIGZyb20gIi4vZWRpdC1mb3JtLUludGVydmFsLXRhc2siOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsgRWRpdEZvcm1JbnRlcnZhbFRhc2sgfSwKICBwcm9wczoge30sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBlcmlvZGljRGF0YTogW10sCiAgICAgIG11bHRpcGxlU2VsZWN0aW9uOiBbXSwKICAgICAgSW50ZXJ2YWxUYWdMaXN0OiBbXSwKICAgICAgZWRpdEludGVydmFsOiB7fSwKICAgICAgZWRpdEludGVydmFsRm9ybVZpc2libGU6IGZhbHNlLAogICAgICBlZGl0SW50ZXJ2YWxDcmVhdGU6IGZhbHNlLAogICAgICBtb2RlbEZvcm1WaXNpYmxlOiBmYWxzZSwKICAgICAgbW9kZWxTd2FnZ2VyVmlzaWJsZTogZmFsc2UsCiAgICAgIGJhdGNoRWRpdEZvcm1WaXNpYmxlOiBmYWxzZSwKICAgICAgZGV0YWlsOiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7fSwKICB3YXRjaDoge30sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuaW5pdERhdGEoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXREYXRhKCkgewogICAgICBTeW5jRGF0YUFwaS5saXN0SW50ZXJ2YWxzY2hlZHVsZSh7IHBhZ2VTaXplOiAxMDAwIH0pLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgdGhpcy5kZXRhaWwgPSByZXNwb25zZS5kYXRhLnJlc3VsdHMgfHwgW107CiAgICAgICAgdGhpcy4kc3RvcmUuc3RhdGUuSW50ZXJ2YWwgPSB0aGlzLmRldGFpbDsKICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlUmVmcmVzaChpbmZvcykgewogICAgICB0aGlzLiRyZWZzLnRhYmxlLmNsZWFyU2VsZWN0aW9uKCk7CiAgICAgIHRoaXMuJGVtaXQoInVwZGF0ZSIpOwogICAgfSwKICAgIGhhbmRsZUludGVydmFsU2VsZWN0aW9uQ2hhbmdlKGluZm9zKSB7CiAgICAgIHRoaXMubXVsdGlwbGVTZWxlY3Rpb24gPSBpbmZvczsKICAgIH0sCiAgICBoYW5kbGVPcGVuRWRpdEludGVydmFsRm9ybShjcmVhdGUgPSBmYWxzZSwgaW5mbykgewogICAgICBpZiAoY3JlYXRlKSB7CiAgICAgICAgdGhpcy5lZGl0SW50ZXJ2YWwgPSB7IHBlcmlvZGljOiB0aGlzLmRldGFpbC5pZCB9OwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZWRpdEludGVydmFsID0geyAuLi5pbmZvIH07CiAgICAgIH0KICAgICAgdGhpcy5lZGl0SW50ZXJ2YWxDcmVhdGUgPSBjcmVhdGU7CiAgICAgIHRoaXMuZWRpdEludGVydmFsRm9ybVZpc2libGUgPSB0cnVlOwogICAgfSwKICAgIGhhbmRsZVJlbW92ZUludGVydmFsVGFibGUoaW5mbykgewogICAgICB0aGlzLiRjb25maXJtKCLnoa7orqTliKDpmaTvvJ8iLCAi56Gu6K6k5L+h5oGvIiwgewogICAgICAgIGRpc3Rpbmd1aXNoQ2FuY2VsQW5kQ2xvc2U6IHRydWUsCiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICLliKDpmaQiLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICLlj5bmtogiCiAgICAgIH0pLnRoZW4oKCkgPT4gewogICAgICAgIFN5bmNEYXRhQXBpLmRlbGV0ZUludGVydmFsc2NoZWR1bGUoaW5mby5pZCkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICBjb25zdCBuYW1lID0gaW5mby5uYW1lID8gaW5mby5uYW1lICsgIjoiIDogIiI7CiAgICAgICAgICB0aGlzLm1zZ1N1Y2Nlc3MobmFtZSArICLliKDpmaTmiJDlip8iKTsKICAgICAgICAgIHRoaXMuaW5pdERhdGEoKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlU3VjY2Vzc0VkaXRJbnRlcnZhbCgpIHsKICAgICAgdGhpcy4kZW1pdCgidXBkYXRlIik7CiAgICB9LAogICAgaGFuZGxlT3Blbk1vZGVsRm9ybSgpIHsKICAgICAgdGhpcy5tb2RlbEZvcm1WaXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICBoYW5kbGVPcGVuU3dhZ2dlcihtb2RlbCA9IGZhbHNlKSB7CiAgICAgIHRoaXMubW9kZWxTd2FnZ2VyVmlzaWJsZSA9IHRydWU7CiAgICB9LAogICAgaGFuZGxlQmF0Y2hFZGl0KCkgewogICAgICB0aGlzLmJhdGNoRWRpdEZvcm1WaXNpYmxlID0gdHJ1ZTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["interval-index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"interval-index.vue","sourceRoot":"src/views/admin/monitor/celery/interval-task","sourcesContent":["<!--\n@author: xuchi\n@description: 接口信息页面\n-->\n<template>\n  <div class=\"app-container\">\n    <el-card class=\"box-card\" shadow=\"never\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>任务频率</span>\n        <el-button style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"handleOpenEditIntervalForm(true)\">\n          新增频率\n        </el-button>\n      </div>\n      <div style=\"height: 200px;\">\n        <el-scrollbar>\n          <div v-for=\"(val,index) in detail\" :key=\"index\">\n            <div class=\"text\" style=\"display:inline-block;height: 10px;\">\n              {{ getIntervalData(val) }}\n            </div>\n            <div style=\"float: right;padding-right: 10px;display:inline-block\">\n              <el-button\n                type=\"primary\"\n                icon=\"el-icon-edit\"\n                size=\"mini\"\n                circle\n                @click=\"handleOpenEditIntervalForm(false, val)\"\n              />\n              <el-button\n                type=\"danger\"\n                icon=\"el-icon-delete\"\n                size=\"mini\"\n                circle\n                @click=\"handleRemoveIntervalTable(val)\"\n              />\n            </div>\n            <el-divider />\n          </div>\n          <div v-if=\"detail.length===0\" style=\"text-align: center\">\n            暂无信息\n          </div>\n        </el-scrollbar>\n      </div>\n    </el-card>\n    <edit-form-interval-task\n      v-model=\"editIntervalFormVisible\"\n      :entity=\"editInterval\"\n      :create=\"editIntervalCreate\"\n      :periodic-data=\"periodicData\"\n      :width=\"'30%'\"\n      @success=\"handleSuccessEditInterval\"\n    />\n  </div>\n</template>\n\n<script>\nimport * as SyncDataApi from \"@/api/admin/monitor/celery\";\nimport EditFormIntervalTask from \"./edit-form-Interval-task\";\n\nexport default {\n  components: { EditFormIntervalTask },\n  props: {},\n  data() {\n    return {\n      periodicData: [],\n      multipleSelection: [],\n      IntervalTagList: [],\n      editInterval: {},\n      editIntervalFormVisible: false,\n      editIntervalCreate: false,\n      modelFormVisible: false,\n      modelSwaggerVisible: false,\n      batchEditFormVisible: false,\n      detail: []\n    };\n  },\n  computed: {},\n  watch: {},\n  created() {\n    this.initData();\n  },\n  methods: {\n    initData() {\n      SyncDataApi.listIntervalschedule({ pageSize: 1000 }).then((response) => {\n        this.detail = response.data.results || [];\n        this.$store.state.Interval = this.detail;\n      });\n    },\n    handleRefresh(infos) {\n      this.$refs.table.clearSelection();\n      this.$emit(\"update\");\n    },\n    handleIntervalSelectionChange(infos) {\n      this.multipleSelection = infos;\n    },\n    handleOpenEditIntervalForm(create = false, info) {\n      if (create) {\n        this.editInterval = { periodic: this.detail.id };\n      } else {\n        this.editInterval = { ...info };\n      }\n      this.editIntervalCreate = create;\n      this.editIntervalFormVisible = true;\n    },\n    handleRemoveIntervalTable(info) {\n      this.$confirm(\"确认删除？\", \"确认信息\", {\n        distinguishCancelAndClose: true,\n        confirmButtonText: \"删除\",\n        cancelButtonText: \"取消\"\n      }).then(() => {\n        SyncDataApi.deleteIntervalschedule(info.id).then(response => {\n          const name = info.name ? info.name + \":\" : \"\";\n          this.msgSuccess(name + \"删除成功\");\n          this.initData();\n        });\n      });\n    },\n    handleSuccessEditInterval() {\n      this.$emit(\"update\");\n    },\n    handleOpenModelForm() {\n      this.modelFormVisible = true;\n    },\n    handleOpenSwagger(model = false) {\n      this.modelSwaggerVisible = true;\n    },\n    handleBatchEdit() {\n      this.batchEditFormVisible = true;\n    }\n  }\n};\n</script>\n\n<style scoped>\n    .el-table th {\n        display: table-cell !important;\n    }\n\n    .el-scrollbar {\n        height: 100%;\n    }\n\n    .el-scrollbar__wrap {\n        overflow: scroll;\n        width: 100%;\n        height: 100%;\n    }\n\n    .el-scrollbar__view {\n        height: 100%;\n    }\n\n    .el-divider--horizontal {\n        margin: 14px 0;\n    }\n\n    .text {\n        padding-left: 20px;\n        font-size: 14px;\n    }\n    .el-button--mini.is-circle {\n        padding: 5px;\n\n    }\n</style>\n"]}]}