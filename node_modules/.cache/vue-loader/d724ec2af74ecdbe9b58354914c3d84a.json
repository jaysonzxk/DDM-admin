{"remainingRequest":"/Users/mac/Desktop/DDM-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Desktop/DDM-admin/src/views/admin/monitor/server/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/mac/Desktop/DDM-admin/src/views/admin/monitor/server/index.vue","mtime":1702065174000},{"path":"/Users/mac/Desktop/DDM-admin/node_modules/cache-loader/dist/cjs.js","mtime":1703645363792},{"path":"/Users/mac/Desktop/DDM-admin/node_modules/babel-loader/lib/index.js","mtime":1703645364828},{"path":"/Users/mac/Desktop/DDM-admin/node_modules/cache-loader/dist/cjs.js","mtime":1703645363792},{"path":"/Users/mac/Desktop/DDM-admin/node_modules/vue-loader/lib/index.js","mtime":1703645365038}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/admin/monitor/server","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 监控控制 -->\n    <div class=\"server-monitor-control\">\n      <!-- 监控启用开关 -->\n      <div class=\"control-server-monitor same-block\">\n        开启监控：\n        <el-switch\n          v-model=\"isOpeningMonitor\"\n          active-color=\"#13ce66\"\n          inactive-color=\"#ff4949\"\n          title=\"控制所有监控项\"\n          @change=\"changeMonitorStatus\"\n        />\n      </div>\n      <!-- 更新频率设置 -->\n      <div class=\"monitor-update-interval same-block\">\n        监控频率：\n        <el-input-number\n          v-model=\"monitorUpdateInterval\"\n          label=\"\"\n          class=\"monitor-update-interval-blank\"\n          controls-position=\"right\"\n          :min=\"minMonitorUpdateInterval\"\n          @input=\"handleIntervalChange\"\n        />\n        <el-select\n          v-model=\"intervalType\"\n          class=\"monitor-update-interval-unit\"\n          @change=\"selectIntervalType\"\n        >\n          <el-option\n            v-for=\"item in Object.keys(INTERVAL_ID_TO_TYPE_MAPPING)\"\n            :key=\"INTERVAL_ID_TO_TYPE_MAPPING[item].type\"\n            :label=\"INTERVAL_ID_TO_TYPE_MAPPING[item].name\"\n            :value=\"INTERVAL_ID_TO_TYPE_MAPPING[item].name\"\n          />\n        </el-select>\n\n      </div>\n      <!-- 监控日志保存时间 -->\n      <div class=\"monitor-log-save-time same-block\">\n        保存天数：\n        <el-input v-model=\"monitorLogSavingDays\" class=\" same-block\" style=\"width: 120px;\" />\n        <el-button\n          type=\"primary\"\n          class=\"same-block\"\n          title=\"只有提交更改才会生效\"\n          @click=\"updateMonitorStatusSettingsInfo\"\n        >更改\n        </el-button>\n      </div>\n      <!-- 清空记录 -->\n      <div class=\"clean-monitor-log same-block\">\n        <el-button\n          class=\"same-block\"\n          type=\"warning\"\n          title=\"清空所有监控记录\"\n          @click=\"cleanMonitorLogsInfo\"\n        >清空记录\n        </el-button>\n      </div>\n    </div>\n\n    <div class=\"server-monitor-top\">\n      <!-- 左侧服务器信息 -->\n      <el-card class=\"box-card server-information\">\n        <div slot=\"header\" class=\"clearfix\">\n          <div class=\"server-info-item\">服务器</div>\n          <el-select\n            filterable\n            :value=\"currentServerName\"\n            class=\"server-info-item\"\n            placeholder=\"请选择服务器\"\n            @change=\"chooseServerInfo\"\n          >\n            <el-option\n              v-for=\"(item,index) in allServerInfo\"\n              :key=\"item.id\"\n              :label=\"item.name || item.ip\"\n              :value=\"index\"\n            />\n          </el-select>\n          <el-button\n            type=\"primary\"\n            class=\"server-info-item\"\n            title=\"只有提交更改才会生效\"\n            @click=\"updateServerInfo\"\n          >更改\n          </el-button>\n        </div>\n        <div class=\"server-info-detail\">\n          <div v-for=\"(key,index) in currentServerInfoKeys\" :key=\"index\" class=\"server-info-detail-line text item\">\n            <div class=\"server-info-detail-item\">\n              <div style=\"width: 30%;display: inline-block;\">{{ SERVER_KEY_TO_NAME_MAPPING[key] }}:</div>\n              <div v-if=\"CHANGEABLE_SERVER_FIELDS.indexOf(key) > -1\" style=\"display: inline-block;\">\n                <el-input v-model=\"currentServer[key]\" style=\"display: inline-block; width: 90%;\" />\n              </div>\n              <div v-else style=\"display: inline-block; \"> {{ currentServer[key] }}</div>\n            </div>\n          </div>\n        </div>\n      </el-card>\n\n      <!-- 右侧仪表盘 -->\n      <el-card\n        v-for=\"(key, index) of Object.keys(instrumentBoardData)\"\n        :key=\"`${index}-${key}`\"\n        class=\"box-card information-instrument-panel\"\n      >\n        <instrument-board\n          :show-top-title=\"true\"\n          :show-sub-title=\"true\"\n          :ring-graph-key=\"key\"\n          :instrument-board-data=\"instrumentBoardData[key]\"\n          :top-title-key-to-name-mapping=\"INSTRUMENT_BOARD_KEY_TO_NAME_MAPPING\"\n        />\n      </el-card>\n    </div>\n    <!--  下方折线图  -->\n    <div class=\"server-monitor-bottom\">\n      <!-- 折线图 -->\n      <el-card\n        v-for=\"(key, index) in Object.keys(lineChartData).slice(0,2)\"\n        :key=\"`${index}-${key}`\"\n        class=\"box-card server-monitor-line-chart\"\n      >\n        <line-chart\n          :line-chart-key=\"key\"\n          :server-info=\"currentServer\"\n          :chart-title=\"CHART_KEY_NAME_MAPPING[key]\"\n          :chart-data=\"lineChartData[key]\"\n          :chart-time=\"lineChartData['datetime']\"\n        />\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  cleanMonitorLog,\n  getMonitorLogs,\n  getMonitorStatusInfo,\n  getServerLatestLog,\n  getServerList,\n  updateMonitorStatusInfo,\n  updateServerInfo\n} from \"@/api/admin/monitor/server\";\nimport InstrumentBoard from \"@/views/admin/monitor/server/components/InstrumentBoard\";\nimport LineChart from \"@/views/admin/monitor/server/components/LineChart\";\nimport moment from \"moment\";\n\nconst debounce = require(\"lodash/debounce\");\n\n// 要展示的信息，key -> name\nconst SERVER_KEY_TO_NAME_MAPPING = {\n  ip: \"服务器IP\",\n  name: \"服务器名称\",\n  os: \"操作系统\",\n  remark: \"备注\"\n};\n\n// 更新频率类型映射\nconst INTERVAL_ID_TO_TYPE_MAPPING = {\n  0: {\n    type: 0,\n    name: \"秒\",\n    key: \"seconds\",\n    second: 1\n  },\n  1: {\n    type: 1,\n    name: \"分钟\",\n    key: \"minutes\",\n    second: 60\n  },\n  2: {\n    type: 2,\n    name: \"小时\",\n    key: \"hours\",\n    second: 60 * 60\n  },\n  3: {\n    type: 3,\n    name: \"天\",\n    key: \"days\",\n    second: 24 * 60 * 60\n  }\n};\nconst defaultUpdateInterval = INTERVAL_ID_TO_TYPE_MAPPING[\"0\"];\n\n// 图表字段映射\nconst CHART_KEY_NAME_MAPPING = {\n  cpu: \"CPU\",\n  memory: \"内存\",\n  disk: \"磁盘\"\n};\n\n// 仪表盘字段映射\nconst INSTRUMENT_BOARD_KEY_TO_NAME_MAPPING = {\n  cpu: \"CPU使用率\",\n  memory: \"内存使用率\"\n};\n\n// 服务器信息可修改字段\nconst CHANGEABLE_SERVER_FIELDS = [\"name\", \"remark\"];\n\nexport default {\n  name: \"Server\",\n  components: {\n    InstrumentBoard,\n    LineChart\n  },\n  data() {\n    return {\n      SERVER_KEY_TO_NAME_MAPPING,\n      INTERVAL_ID_TO_TYPE_MAPPING,\n      CHART_KEY_NAME_MAPPING,\n      CHANGEABLE_SERVER_FIELDS,\n      INSTRUMENT_BOARD_KEY_TO_NAME_MAPPING,\n      timeRange: [\n        `${moment().format(\"YYYY-MM-DD\")} 00:00:00`,\n        `${moment().format(\"YYYY-MM-DD\")} 23:59:59`\n      ],\n      // 加载层信息\n      loading: [],\n      // 所有服务器信息\n      allServerInfo: [],\n      // 当前展示的服务器名称\n      currentServerName: \"\",\n      // 当前展示的服务器信息\n      currentServer: {},\n      // 当前展示的服务器信息索引，更新服务器信息时用\n      currentServerIndex: 0,\n      // 开启监控控制按钮\n      isOpeningMonitor: false,\n      // 数据更新频率\n      monitorUpdateInterval: 60,\n      // 最小更新频率值\n      minMonitorUpdateInterval: 0,\n      // 更新频率类型\n      intervalType: defaultUpdateInterval.name,\n      // 更新频率单位对应秒\n      intervalTypeUnits: defaultUpdateInterval.second,\n      // 监控日志保存天数\n      monitorLogSavingDays: 30,\n      // 折线图数据\n      lineChartData: {},\n      // 仪表盘数据\n      instrumentBoardData: {}\n    };\n  },\n  computed: {\n    currentServerInfoKeys() {\n      return Object.keys(this.currentServer).filter(key => {\n        if (SERVER_KEY_TO_NAME_MAPPING[key]) {\n          return { [key]: SERVER_KEY_TO_NAME_MAPPING[key] };\n        }\n      });\n    },\n    intervalNameToSecondMapping() {\n      const intervalNameToSecondMapping = {};\n      Object.values(INTERVAL_ID_TO_TYPE_MAPPING).forEach(item => {\n        intervalNameToSecondMapping[item.name] = item.second;\n      });\n      return intervalNameToSecondMapping;\n    },\n    monitorStatusInfo() {\n      return {\n        enabled: this.isOpeningMonitor ? 1 : 0,\n        save_days: this.monitorLogSavingDays,\n        interval: this.monitorUpdateInterval * this.intervalTypeUnits\n      };\n    }\n  },\n  watch: {\n    currentServer(newServerInfo) {\n      if (newServerInfo) {\n        // 更新最新监控信息\n        this.getServerLatestLogInfo(newServerInfo.id);\n        // 获取监控日志信息\n        this.getCurrentServerMonitorLogs();\n      }\n    }\n  },\n  created() {\n    this.openLoading();\n    // 获取所有服务器信息\n    this.getServerList(this.currentServerIndex);\n    // 获取服务器监控频率设置\n    this.getMonitorStatusSettingsInfo();\n  },\n  methods: {\n    /** 查询所有服务器基础信息 */\n    getServerList(serverIndex) {\n      getServerList({ pageNum: \"all\" }).then(response => {\n        this.allServerInfo = response.data;\n        if (this.allServerInfo.length > 0) {\n          this.currentServer = this.allServerInfo[serverIndex || this.currentServerIndex];\n          this.currentServerName = this.currentServer.name || this.currentServer.ip;\n        }\n        this.loading.close();\n      });\n    },\n    /** 修改服务器信息*/\n    updateServerInfo() {\n      updateServerInfo(this.currentServer.id, this.currentServer).then(() => {\n        this.msgSuccess(\"修改服务器信息成功！\");\n      }).catch(error => {\n        this.$message.error(error.msg || \"提交修改服务器信息出错！\");\n      }).finally(() => {\n        this.getServerList();\n      });\n    },\n    /** 获取服务器最新监控信息 */\n    getServerLatestLogInfo(serverId) {\n      getServerLatestLog(serverId).then(results => {\n        this.instrumentBoardData = results.data;\n      }).catch(error => {\n        this.msgError(error.msg || \"获取服务器最新监控信息错误！\");\n      });\n    },\n    /** 获取监控日志信息 */\n    getCurrentServerMonitorLogs() {\n      getMonitorLogs(this.currentServer.id, { as: JSON.stringify({ \"create_datetime__range\": this.timeRange }) }).then(results => {\n        this.lineChartData = results.data;\n      }).catch(error => {\n        this.msgError(error.msg || \"获取监控日志信息出错误！\");\n      });\n    },\n\n    /** 清除监控日志 */\n    cleanMonitorLogsInfo() {\n      this.$confirm(\"此操作将删除所有的监控记录，是否继续？\", \"提示\", {\n        confirmButtonText: \"确定删除\",\n        cancelButtonText: \"放弃\"\n      }).then(() => {\n        cleanMonitorLog().then(results => {\n          this.msgSuccess(\"清除记录成功！\");\n        }).catch(error => {\n          this.$message.warning(error.msg || \"清除记录失败，请重试！\");\n        });\n      }).catch(() => {\n      });\n    },\n\n    /** 获取监控配置信息 */\n    getMonitorStatusSettingsInfo() {\n      getMonitorStatusInfo().then(results => {\n        const { enabled, interval, save_days } = results.data;\n        this.isOpeningMonitor = enabled;\n        this.monitorLogSavingDays = parseInt(save_days);\n        this.formatInterval(parseInt(interval));\n      }).catch(error => {\n        this.msgError(error.msg || \"获取服务器监控配置信息出错误！\");\n      });\n    },\n    /** 更新监控配置信息 */\n    updateMonitorStatusSettingsInfo() {\n      updateMonitorStatusInfo(this.monitorStatusInfo).then(() => {\n        this.msgSuccess(\"更新配置成功！\");\n      }).catch((error) => {\n        this.msgError(error.msg || \"更新服务器监控配置信息出错误！\");\n      });\n    },\n\n    // 打开加载层\n    openLoading() {\n      this.loading = this.$loading({\n        lock: true,\n        text: \"拼命读取中\",\n        spinner: \"el-icon-loading\",\n        background: \"rgba(0, 0, 0, 0.7)\"\n      });\n    },\n    // 选择展示的服务器信息\n    chooseServerInfo(index) {\n      this.currentServerIndex = index;\n      this.currentServer = this.allServerInfo[index];\n      this.currentServerName = this.currentServer.name || this.currentServer.ip;\n    },\n    // 更改更新频率（周期）数值\n    handleIntervalChange: debounce(function(value) {\n      this.monitorUpdateInterval = value;\n    }, 500),\n    // 选择更新频率（周期） 单位\n    selectIntervalType(value) {\n      this.intervalType = value;\n      this.intervalTypeUnits = this.intervalNameToSecondMapping[value];\n    },\n    // 修改监控状态\n    changeMonitorStatus(value) {\n      this.isOpeningMonitor = value;\n    },\n    // 监控周期时间转换\n    formatInterval(intervalTime) {\n      let biggerInterval = 0;\n      for (const interval of Object.values(INTERVAL_ID_TO_TYPE_MAPPING)) {\n        if (interval.second > biggerInterval && interval.second < intervalTime) {\n          biggerInterval = interval.second;\n          this.monitorUpdateInterval = intervalTime / interval.second;\n          this.intervalType = interval.name;\n          this.intervalTypeUnits = interval.second;\n        }\n      }\n    }\n  }\n};\n</script>\n<style scoped>\n.el-button--medium {\n  margin: 2px;\n  padding: 10px 10px;\n}\n\n.server-monitor-top {\n  padding: 10px 10px;\n  text-align: justify-all;\n  overflow-x: scroll;\n  display: flex;\n}\n\n.server-monitor-bottom {\n  text-align: left;\n  overflow-x: scroll;\n  display: flex;\n}\n\n.server-information {\n  width: 20%;\n  min-width: 400px;\n  min-height: 300px;\n  display: inline-block;\n}\n\n.information-instrument-panel {\n  width: 20%;\n  display: inline-block;\n  min-height: 300px;\n  min-width: 300px;\n  margin: 0 10px;\n}\n\n.server-info-item {\n  display: inline-block;\n  margin: 0 5px;\n}\n\n.server-info-detail {\n  min-height: 200px;\n}\n\n.server-info-detail-line {\n  margin: 5px;\n  min-height: 20px;\n}\n\n.server-info-detail-item {\n  text-align: justify;\n  line-height: 40px;\n  margin: 4px 0;\n  overflow: auto;\n}\n\n.server-monitor-control {\n  width: 100%;\n  height: 60px;\n  line-height: 60px;\n  padding: 0 20px;\n}\n\n.monitor-update-interval {\n  margin: 0 20px;\n}\n\n.same-block {\n  display: inline-block;\n}\n\n.monitor-update-interval-blank {\n  width: 100px;\n  margin: 0 2px;\n}\n\n.monitor-update-interval-unit {\n  width: 80px;\n  margin: 0 2px;\n}\n\n.monitor-log-save-time {\n  width: 280px;\n  margin: 0 2px;\n}\n\n.server-monitor-line-chart {\n  height: 400px;\n  width: 45%;\n  min-width: 500px;\n  margin: 10px;\n  display: inline-block;\n  overflow-x: scroll;\n}\n\n</style>\n"]}]}