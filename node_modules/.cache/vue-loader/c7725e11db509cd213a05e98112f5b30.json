{"remainingRequest":"/Users/mac/Desktop/DDM-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Desktop/DDM-admin/src/components/ModelDisplay/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/mac/Desktop/DDM-admin/src/components/ModelDisplay/index.vue","mtime":1702065174000},{"path":"/Users/mac/Desktop/DDM-admin/node_modules/cache-loader/dist/cjs.js","mtime":1703645363792},{"path":"/Users/mac/Desktop/DDM-admin/node_modules/babel-loader/lib/index.js","mtime":1703645364828},{"path":"/Users/mac/Desktop/DDM-admin/node_modules/cache-loader/dist/cjs.js","mtime":1703645363792},{"path":"/Users/mac/Desktop/DDM-admin/node_modules/vue-loader/lib/index.js","mtime":1703645365038}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/ModelDisplay","sourcesContent":["<!--\n@description: 强大的CRUD组件封装\n-->\n<template>\n  <div style=\"padding-left: 10px;padding-top: 10px;\">\n    <div class=\"grid-content bg-purple\">\n      <el-form ref=\"queryForm\" :model=\"queryParams\" :inline=\"true\" label-width=\"90px\">\n        <el-row>\n          <el-form-item\n            v-for=\"(value,index) in fields\"\n            v-if=\"value.search\"\n            :key=\"index\"\n            :label=\"value.label\"\n            :prop=\"value.prop\"\n          >\n            <!--           date/option/bool/users/depts -->\n            <el-switch\n              v-if=\"value.type==='boolean'\"\n              v-model=\"queryParams[value.prop]\"\n              active-color=\"#13ce66\"\n              inactive-color=\"#ff4949\"\n            />\n            <model-select\n              v-else-if=\"value.type==='model_select' && value.select_data\"\n              :value.sync=\"queryParams[value.prop]\"\n              :prop=\"value.prop\"\n              :placeholder=\"value.select_data.placeholder|| '请选择'\"\n              :multiple=\"value.select_data.multiple|| false\"\n              :disable_branch_nodes=\"value.select_data.disable_branch_nodes|| false\"\n              :label_name=\"value.select_data.label_name|| 'name'\"\n              :select_options=\"modelSelect[value.prop] || []\"\n              style=\"width: 180px;line-height: 20px;\"\n            />\n            <dept-tree\n              v-else-if=\"value.type==='depts'\"\n              ref=\"dept_tree\"\n              :value.sync=\"queryParams[value.prop]\"\n              style=\"width: 150px;\"\n            />\n            <users-tree\n              v-else-if=\"value.type==='users'\"\n              ref=\"users_tree\"\n              :value.sync=\"queryParams[value.prop]\"\n              style=\"width: 150px;\"\n            />\n            <el-date-picker\n              v-else-if=\"value.type==='date'|| value.type==='datetime'\"\n              v-model=\"dateRange\"\n              size=\"small\"\n              style=\"width: 240px\"\n              value-format=\"yyyy-MM-dd HH:mm:ss\"\n              type=\"daterange\"\n              range-separator=\"-\"\n              start-placeholder=\"开始日期\"\n              end-placeholder=\"结束日期\"\n              :default-time=\"['00:00:00', '23:59:59']\"\n            />\n            <el-select\n              v-else-if=\"value.type==='option' && value.option_key\"\n              v-model=\"queryParams[value.prop]\"\n              :placeholder=\"value.label\"\n              clearable\n              size=\"small\"\n            >\n              <el-option\n                v-for=\"dict in DictsOptions[value.option_key]\"\n                :key=\"dict.dictValue\"\n                :label=\"dict.dictLabel\"\n                :value=\"dict.dictValue\"\n              />\n            </el-select>\n            <el-input\n              v-else\n              v-model=\"queryParams[value.prop]\"\n              :placeholder=\"value.label\"\n              clearable\n              size=\"small\"\n              @keyup.enter.native=\"handleQuery\"\n            />\n          </el-form-item>\n          <el-form-item>\n            <el-col :offset=\"8\">\n              <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleSearchFormSubmit\">搜索</el-button>\n              <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n            </el-col>\n          </el-form-item>\n        </el-row>\n      </el-form>\n    </div>\n    <el-row v-if=\"topLayout\" style=\"margin-bottom: 20px\">\n      <el-col v-if=\"topLayoutLeft\" :span=\"18\">\n        <el-row :gutter=\"10\" class=\"mb8\">\n          <el-col v-for=\"(func,index) in funcs\" :key=\"index\" :span=\"1.5\">\n            <el-button\n              v-if=\"func.type==='add'\"\n              v-hasPermi=\"func.permis\"\n              type=\"primary\"\n              plain\n              :icon=\"func.icon||'el-icon-plus'\"\n              size=\"mini\"\n              @click=\"handleAdd(func)\"\n            >{{ func.label }}\n            </el-button>\n            <el-button\n              v-else-if=\"func.type==='update'\"\n              v-hasPermi=\"func.permis\"\n              type=\"success\"\n              plain\n              :disabled=\"multipleSelection.length!==1\"\n              :icon=\"func.icon||'el-icon-edit'\"\n              size=\"mini\"\n              @click=\"handleUpdate(func,{})\"\n            >{{ func.label }}\n            </el-button>\n            <el-button\n              v-else-if=\"func.type==='delete'\"\n              v-hasPermi=\"func.permis\"\n              type=\"danger\"\n              plain\n              :disabled=\"multipleSelection.length===0\"\n              :icon=\"func.icon||'el-icon-delete'\"\n              size=\"mini\"\n              @click=\"handleDelete(func,{})\"\n            >{{ func.label }}\n            </el-button>\n            <el-button\n              v-else-if=\"func.type==='export'\"\n              v-hasPermi=\"func.permis\"\n              type=\"warning\"\n              plain\n              :icon=\"func.icon||'el-icon-download'\"\n              size=\"mini\"\n              @click=\"handleExport(func)\"\n            >{{ func.label }}\n            </el-button>\n            <el-button\n              v-else-if=\"func.type==='import'\"\n              v-hasPermi=\"func.permis\"\n              type=\"info\"\n              plain\n              :icon=\"func.icon||'el-icon-upload2'\"\n              size=\"mini\"\n              @click=\"handleImport(func.api)\"\n            >{{ func.label }}\n            </el-button>\n          </el-col>\n          <slot name=\"head_button\" />\n        </el-row>\n      </el-col>\n      <el-col v-if=\"topLayoutRight\" :span=\"6\">\n        <div class=\"grid-content bg-purple-light\" style=\"text-align: right\">\n          <slot name=\"tools\" />\n          <el-popover\n            placement=\"bottom\"\n            width=\"200\"\n            trigger=\"click\"\n          >\n            <div style=\"width: 50px;\">\n              <el-checkbox-group v-model=\"showFields\">\n                <el-checkbox\n                  v-for=\"(field, index) in fields\"\n                  :key=\"index\"\n                  :label=\"field\"\n                  :checked=\"field.show\"\n                  style=\"width: 100%\"\n                  @change=\"handleSelectField($event, field)\"\n                >{{ field.label }}\n                </el-checkbox>\n              </el-checkbox-group>\n            </div>\n            <el-button\n              slot=\"reference\"\n              :size=\"$ELEMENT.size\"\n              name=\"refresh\"\n              type=\"info\"\n              icon=\"el-icon-s-fold\"\n              title=\"设置显示的字段\"\n            />\n          </el-popover>\n        </div>\n      </el-col>\n    </el-row>\n\n    <el-table\n      ref=\"tableData\"\n      v-loading=\"tableLoading\"\n      :span-method=\"spanMethod\"\n      :data=\"tableData\"\n      :max-height=\"maxHeight\"\n      :row-key=\"getRowKeys\"\n      :stripe=\"stripe\"\n      :fit=\"fit\"\n      :border=\"border\"\n      :empty-text=\"emptyText\"\n      :highlight-current-row=\"highlightCurrentRow\"\n      :show-overflow-tooltip=\"showOverflowTooltip\"\n      @sort-change=\"handleSortChange\"\n      @cell-click=\"handleCellClick\"\n      @cell-dblclick=\"handleCellDbClick\"\n      @header-click=\"handleHeaderClick\"\n      @row-click=\"handleRowClick\"\n      @row-dblclick=\"handleRowDblClick\"\n      @selection-change=\"handleSelectionChange\"\n    >\n      <el-table-column v-if=\"selection\" :reserve-selection=\"true\" type=\"selection\" width=\"50\" />\n      <slot name=\"prependColumn\" />\n      <!--<el-table-column v-if=\"false\" :index=\"getRowIndex\" label=\"序号\" type=\"index\" width=\"50\"/>-->\n      <template v-for=\"field in fields\">\n        <el-table-column\n          v-if=\"field.show\"\n          :key=\"field.prop\"\n          :prop=\"field.prop\"\n          :label=\"field.label\"\n          :sortable=\"field.sortable\"\n          :width=\"field.width || ''\"\n          show-overflow-tooltip\n        >\n          <template slot-scope=\"scope\">\n            <slot :name=\"field.prop\" :values=\"scope.row\" :prop=\"field.prop\" :field=\"field\">\n              <span v-html=\"formatColumnData(scope.row, field)\" />\n            </slot>\n          </template>\n        </el-table-column>\n      </template>\n      <el-table-column\n        v-if=\"hasPermi(getOperationPermis())\"\n        label=\"操作\"\n        align=\"center\"\n        width=\"220\"\n        class-name=\"small-padding fixed-width\"\n      >\n        <template slot-scope=\"scope\">\n          <span v-for=\"(func,index) in funcs\" :key=\"index\">\n            <el-button\n              v-if=\"func.type==='select'\"\n              v-hasPermi=\"func.permis\"\n              size=\"mini\"\n              type=\"text\"\n              :icon=\"func.icon||'el-icon-view'\"\n              @click=\"handleSelect(func,scope.row)\"\n            >{{ func.label }}</el-button>\n            &nbsp;\n            <el-button\n              v-if=\"func.type==='update'\"\n              v-hasPermi=\"func.permis\"\n              size=\"mini\"\n              type=\"text\"\n              :icon=\"func.icon||'el-icon-edit'\"\n              @click=\"handleUpdate(func,scope.row)\"\n            >{{ func.label }}</el-button>\n            &nbsp;\n            <el-button\n              v-else-if=\"func.type==='delete'\"\n              v-hasPermi=\"func.permis\"\n              size=\"mini\"\n              type=\"text\"\n              :icon=\"func.icon||'el-icon-delete'\"\n              @click=\"handleDelete(func,scope.row)\"\n            >{{ func.label }}</el-button>\n          </span>\n        </template>\n      </el-table-column>\n      <slot name=\"appendColumn\" />\n      <slot name=\"column\" />\n    </el-table>\n    <el-row>\n      <el-col v-if=\"selection\" :span=\"6\" style=\"margin-top: 20px\">\n        <span>已选择:<span style=\"color: #ff00ff;font-weight: bold;\">{{ multipleSelection.length }}</span>条</span>\n        <el-button\n          v-show=\"multipleSelection.length\"\n          type=\"info\"\n          size=\"mini\"\n          title=\"清空多选\"\n          @click=\"clearMultipleSelection\"\n        >清空\n        </el-button>\n      </el-col>\n      <el-pagination\n        :current-page=\"pagination.page\"\n        :page-size=\"pagination.page_size\"\n        :total=\"pagination.total\"\n        :page-sizes=\"paginationStyle.pageSizes || [10, 20, 50, 100]\"\n        :disabled=\"tableLoading\"\n        :small=\"paginationStyle.small || false\"\n        :layout=\"paginationStyle.layout || 'total, sizes, prev, pager, next, jumper'\"\n        background\n        class=\"right_pagination\"\n        @size-change=\"handleChangePageSize\"\n        @current-change=\"handleChangeCurrentPage\"\n      />\n    </el-row>\n\n    <!-- 添加或修改参数配置对话框 -->\n    <el-dialog\n      :title=\"title\"\n      :visible.sync=\"open\"\n      width=\"500px\"\n      append-to-body\n      :close-on-click-modal=\"close_on_click_modal\"\n      @close=\"close\"\n    >\n      <el-form ref=\"ruleForm\" :model=\"form\" :rules=\"rules\" label-width=\"100px\">\n        <el-form-item\n          v-for=\"(value,index) in fields\"\n          v-if=\"value.form\"\n          :key=\"index\"\n          :label=\"value.label\"\n          :prop=\"value.prop\"\n        >\n          <!--           date/option/bool/users/depts -->\n          <el-switch\n            v-if=\"value.type==='boolean'\"\n            v-model=\"form[value.prop]\"\n            active-color=\"#13ce66\"\n            inactive-color=\"#ff4949\"\n          />\n          <el-input-number\n            v-else-if=\"value.type==='number'\"\n            v-model=\"form[value.prop]\"\n            :precision=\"value.precision || 0\"\n            :step=\"value.step || 1\"\n            :max=\"value.step || Infinity\"\n          />\n          <dept-tree\n            v-else-if=\"value.type==='depts'\"\n            ref=\"dept_tree\"\n            :value.sync=\"form[value.prop]\"\n          />\n          <users-tree\n            v-else-if=\"value.type==='users'\"\n            ref=\"users_tree\"\n            :value.sync=\"form[value.prop]\"\n          />\n          <el-date-picker\n            v-else-if=\"value.type==='date' || value.type==='datetime'\"\n            v-model=\"form[value.prop]\"\n            type=\"date\"\n            size=\"small\"\n            style=\"width: 240px\"\n            value-format=\"yyyy-MM-dd HH:mm:ss\"\n            placeholder=\"选择日期\"\n          />\n          <el-select\n            v-else-if=\"value.type==='option' && value.option_key\"\n            v-model=\"form[value.prop]\"\n            :placeholder=\"value.label\"\n            clearable\n            size=\"small\"\n            style=\"width: 100%\"\n          >\n            <el-option\n              v-for=\"dict in DictsOptions[value.option_key]\"\n              :key=\"dict.dictValue\"\n              :label=\"dict.dictLabel\"\n              :value=\"dict.dictValue\"\n            />\n          </el-select>\n          <el-input\n            v-else-if=\"value.type==='text'\"\n            v-model=\"form[value.prop]\"\n            :placeholder=\"value.label\"\n            type=\"textarea\"\n            clearable\n            size=\"small\"\n          />\n          <model-select\n            v-else-if=\"value.type==='model_select' && value.select_data\"\n            :value.sync=\"form[value.prop]\"\n            :placeholder=\"value.select_data.placeholder|| '请选择'\"\n            :multiple=\"value.select_data.multiple|| false\"\n            :disable_branch_nodes=\"value.select_data.disable_branch_nodes|| false\"\n            :label_name=\"value.select_data.label_name|| 'name'\"\n            :select_options=\"modelSelect[value.prop] || []\"\n            style=\"line-height: 20px;\"\n          />\n          <el-cascader\n            v-else-if=\"value.type==='cascader' && value.select_data\"\n            v-model=\"form[value.prop]\"\n            :placeholder=\"value.select_data.placeholder|| '请选择'\"\n            :options=\"modelSelect[value.prop] || []\"\n            :clearable=\"value.select_data.clearable|| false\"\n            :filterable=\"value.select_data.filterable|| false\"\n            style=\"width: 100%\"\n          />\n          <el-input\n            v-else\n            v-model=\"form[value.prop]\"\n            :placeholder=\"value.label\"\n            clearable\n            size=\"small\"\n          />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button v-if=\"this.title!=='详情'\" type=\"primary\" @click=\"submitForm\">确 定</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n    <!-- 导入对话框 -->\n    <el-dialog :title=\"upload.title\" :visible.sync=\"upload.open\" width=\"400px\" append-to-body>\n      <el-upload\n        ref=\"upload\"\n        :limit=\"1\"\n        accept=\".xlsx, .xls\"\n        :headers=\"upload.headers\"\n        :action=\"upload.url + '?updateSupport=' + upload.updateSupport\"\n        :disabled=\"upload.isUploading\"\n        :on-progress=\"handleFileUploadProgress\"\n        :on-success=\"handleFileSuccess\"\n        :auto-upload=\"false\"\n        drag\n      >\n        <i class=\"el-icon-upload\" />\n        <div class=\"el-upload__text\">\n          将文件拖到此处，或\n          <em>点击上传</em>\n        </div>\n        <div slot=\"tip\" class=\"el-upload__tip\">\n          <el-checkbox v-model=\"upload.updateSupport\" />\n          是否更新已经存在的数据\n          <el-link type=\"info\" style=\"font-size:12px\" @click=\"importTemplate\">下载模板</el-link>\n        </div>\n        <div slot=\"tip\" class=\"el-upload__tip\" style=\"color:red\">提示：仅允许导入“xls”或“xlsx”格式文件！</div>\n      </el-upload>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitFileForm\">确 定</el-button>\n        <el-button @click=\"upload.open = false\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport moment from \"moment\";\nimport * as Utils from \"@/utils\";\nimport { getToken } from \"@/utils/auth\";\nimport ModelSelect from \"../ModelSelect/index\";\nimport { listUser } from \"@/api/admin/permission/user\";\nimport { treeselect } from \"@/api/admin/permission/dept\";\nexport default {\n  name: \"ModelDisplay\",\n  components: { ModelSelect },\n  props: {\n    value: {\n      // table的Data\n      type: Array,\n      default: () => []\n    },\n    spanMethod: {\n      type: Function,\n      default: null\n    },\n    // eslint-disable-next-line vue/require-prop-types\n    maxHeight: {\n      default: 700\n    },\n    stripe: {\n      type: Boolean,\n      default: true\n    },\n    // 是否可以通过点击 窗口外 关闭 Dialog\n    close_on_click_modal: {\n      type: Boolean,\n      default: true\n    },\n    fit: {\n      type: Boolean,\n      default: true\n    },\n    highlightCurrentRow: {\n      type: Boolean,\n      default: true\n    },\n    showOverflowTooltip: {\n      type: Boolean,\n      default: true\n    },\n    border: {\n      type: Boolean,\n      default: false\n    },\n    emptyText: {\n      type: String,\n      default: \"暂无数据\"\n    },\n    paginationParams: {\n      // 新增。分页参数, 当分页格式返回的属性名称不同使用, 可使用该属性覆盖默认分页属性名称\n      // 例如:{ page: 'page', pageSize: 'pageSize', count: 'total',results: 'list' }\n      type: Object,\n      default: () => {\n        return {\n          page: \"pageNum\",\n          pageSize: \"pageSize\",\n          count: \"count\",\n          results: \"results\"\n        };\n      }\n    },\n    listApi: {\n      // 用于替换method + url属性\n      type: Function,\n      default: null\n    },\n    topLayout: {\n      // 用于控制表格顶部的按钮、工具的显示。默认左右的按钮、功能都显示\n      type: Array,\n      default: () => {\n        return [\"left\", \"right\"];\n      }\n    },\n    fields: {\n      // 后端返回的字段\n      type: Array,\n      default: () => {\n        return [];\n      }\n    },\n    funcs: {\n      // 菜单配置字段\n      type: Array,\n      default: () => {\n        return [];\n      }\n    },\n    selection: {\n      // 开始开启多选(默认开启, true)\n      type: Boolean,\n      default: true\n    },\n    params: {\n      // 基本请求参数,最终请求参数=基本参数+基本高级搜索参数+组件封装的基本参数+租金组件封装的高级搜索参数\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    // 默认分页样式\n    paginationStyle: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    // 默认页面大小\n    pageSizes: {\n      type: Array,\n      default: () => {\n        return [10, 20, 50, 100, 500];\n      }\n    }\n  },\n  data() {\n    return {\n      showFields: [], // 显示的字段\n      searchForm: {\n        search: \"\",\n        ordering: \"\"\n      },\n      queryParams: {},\n      tableLoading: false,\n      tableData: [],\n      rowKey: \"\",\n      dateRange: [],\n      multipleSelection: [],\n      pagination: {\n        page: 1,\n        page_size: 10,\n        total: 0\n      },\n      // 表单参数\n      form: {},\n      rules: this.getFormRules(),\n      open: false,\n      // 提交时api\n      submitFormApi: \"\",\n      // 单个查询api\n      selectApi: \"\",\n      // 导入api\n      importApi: \"\",\n      DictsOptions: {},\n      modelSelect: {},\n      getRowKeys: row => {\n        if (this.rowKey) {\n          return row[this.rowKey];\n        }\n        return row.id || row.uuid;\n      },\n      title: \"\",\n      // 用户导入参数\n      upload: {\n        // 是否显示弹出层（用户导入）\n        open: false,\n        // 弹出层标题（用户导入）\n        title: \"\",\n        // 是否禁用上传\n        isUploading: false,\n        // 是否更新已经存在的用户数据\n        updateSupport: 0,\n        // 设置上传的请求头部\n        headers: { Authorization: \"Bearer \" + getToken() },\n        // 上传的地址\n        url: process.env.VUE_APP_BASE_API + \"/admin/system/savefile/\"\n      }\n    };\n  },\n  computed: {\n    topLayoutLeft() {\n      return this.topLayout.indexOf(\"left\") >= 0;\n    },\n    topLayoutRight() {\n      return this.topLayout.indexOf(\"right\") >= 0;\n    }\n  },\n  watch: {\n    params: {\n      deep: true,\n      handler: function(newValue, oldValue) {\n        this.getTableData();\n      }\n    }\n  },\n  mounted() {\n  },\n  created() {\n    this.initComponentData();\n    this.initOptions();\n    this.getOperationPermis();\n    // this.getTableData();\n    this.funcs.map(value => {\n      if (value.type === \"select\") {\n        this.selectApi = value.api;\n      }\n    });\n  },\n  methods: {\n    initComponentData() {\n      this.pagination.page_size = this.pageSizes[0];\n      this.fields.forEach(field => {\n        field.show = (!!field.show);\n        field.type = (field.type || \"string\").toLocaleLowerCase();\n        if (field.type.startsWith(\"bool\")) {\n          field.type = \"boolean\";\n        }\n        field.label = field.label || field.prop;\n        field.search = (!!field.search);\n        field.sortable = (!!field.sortable);\n        if (field.ordering && field.ordering.startsWith(\"desc\")) {\n          this.searchForm.ordering = `-${field.prop}`;\n        } else if (field.ordering && field.ordering.startsWith(\"asc\")) {\n          this.searchForm.ordering = `${field.prop}`;\n        }\n        field.width = field.width || \"\";\n        if (field.type === \"choices\") {\n          if (Utils.isArray(field.choices) && field.choices.length > 0) {\n            if (!Utils.isObj(field.choices[0])) {\n              field.choices = field.choices.map(value => {\n                return {\n                  label: value,\n                  value: value\n                };\n              });\n            }\n          }\n        }\n        field.unique = (!!field.unique);\n        if (field.unique) {\n          this.rowKey = field.prop;\n        }\n      });\n    },\n    formatColumnData(row, field) {\n      const type = field.type || \"string\";\n      const prop = field.prop;\n      if (field.formatter && typeof field.formatter === \"function\") {\n        return field.formatter(row, prop, type);\n      }\n      if (type === \"string\") {\n        return row[prop];\n      } else if (type === \"datetime\") {\n        return this.formatDatetime(row[prop]);\n      } else if (type === \"date\") {\n        return this.formatDate(row[prop]);\n      } else if (type === \"time\") {\n        return this.formatTime(row[prop]);\n      } else if (type === \"option\") {\n        return this.formatOptions(field.option_key, row[prop]);\n      } else if (type === \"users\") {\n        return this.formatSelect(row[prop], prop);\n      } else if (type === \"depts\") {\n        return this.formatSelect(row[prop], prop);\n      } else if (type === \"model_select\") {\n        return this.formatSelect(row[prop], prop);\n      } else if (type.startsWith(\"bool\")) {\n        return row[prop] ? \"是\" : \"否\";\n      } else if (type === \"choices\") {\n        const choices = field.choices;\n        return this.formatChoices(choices, row[prop]);\n      } else {\n        return row[prop];\n      }\n    },\n    formatChoices(choices, value) {\n      for (const choice of choices) {\n        if (choice.value === value) {\n          return choice.label;\n        }\n      }\n      return value;\n    },\n    formatDatetime(datetime) {\n      return moment(datetime).format(\"YYYY-MM-DD HH:mm:ss\");\n    },\n    formatDate(date) {\n      return moment(date).format(\"YYYY-MM-DD\");\n    },\n    formatTime(time) {\n      return moment(time).format(\"HH:mm:ss\");\n    },\n    formatOptions(option_key, id) {\n      var data = this.DictsOptions[option_key];\n      if (id === null || !data) return \"\";\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].dictValue === id) {\n          return data[i].dictLabel;\n        }\n      }\n      return \"\";\n    },\n    formatSelect(id, prop) {\n      var data = this.modelSelect[prop];\n      if (!id || !data) return \"\";\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].id === id) {\n          return data[i].label;\n        }\n      }\n      return \"\";\n    },\n    getTableData() {\n      this.listInterfaceData(this.getRequestParams());\n      return this.tableData;\n    },\n    getFormattedPaginationParams() {\n      const pageParamName = this.paginationParams.page;\n      const pageSizeParamName = this.paginationParams.pageSize;\n      const params = {};\n      params[pageParamName] = this.pagination.page;\n      params[pageSizeParamName] = this.pagination.page_size;\n      return params;\n    },\n    // 根据搜索框的内容, 组装请求参数\n    getRequestParams() {\n      // 组装分页参数、高级搜索参数\n      const tmpParams = { ...this.params, ...this.getFormattedPaginationParams(), ...this.queryParams };\n      const params = {};\n      for (const prop of Object.keys(tmpParams)) {\n        if (tmpParams[prop]) {\n          params[prop] = tmpParams[prop];\n        }\n      }\n      // 组装普遍模糊搜索的参数\n      if (this.searchForm.search) {\n        params[\"search\"] = this.searchForm.search;\n      }\n      // 组装普遍排序搜索的参数\n      if (this.searchForm.ordering) {\n        params[\"ordering\"] = this.searchForm.ordering;\n      }\n      // console.dir(params);\n      return this.addDateRange(params, this.dateRange);\n    },\n    // 封装后端接口, 后端接口返回数据必须规范一致\n    listInterfaceData(params) {\n      this.tableLoading = true;\n      this.listApi(params).then(response => {\n        this.tableLoading = false;\n        if (response.status === \"success\") {\n          const resultsParamName = this.paginationParams.results;\n          const countParamName = this.paginationParams.count;\n          this.tableData = response.data[resultsParamName] || [];\n          this.pagination.total = response.data[countParamName] || 0;\n        } else {\n          this.$message.warning(response.msg || \"获取接口信息失败!\");\n        }\n      }).catch(error => {\n        this.tableLoading = false;\n        console.error(error);\n      });\n    },\n    /** 清空已选择 */\n    clearMultipleSelection() {\n      this.clearSelection();\n    },\n    /** 清空已选择 */\n    clearSelection() {\n      this.$refs.tableData.clearSelection();\n    },\n    handleSelectField(e, field) {\n      field.show = e;\n    },\n    // 处理提交表单, 点击搜索按钮事件\n    handleSearchFormSubmit() {\n      this.pagination.page = 1;\n      this.getTableData();\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.pagination.page = 1;\n      this.getTableData();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.dateRange = [];\n      this.queryParams = {};\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    /** 初始化 Options */\n    initOptions() {\n      const Promises = [];\n      this.fields.map(value => {\n        if (value.option_key) {\n          Promises.push(this.getDicts(value.option_key).then(response => {\n            this.DictsOptions[value.option_key] = response.data;\n          }));\n        }\n        if (value.type === \"model_select\" && value.select_data) {\n          Promises.push(this.getModelSelect(value.prop, value.select_data.label_name, value.select_data.listApi).then(response => {\n            this.modelSelect[value.prop] = response;\n          }));\n        }\n        if (value.type === \"cascader\" && value.select_data) {\n          Promises.push(value.select_data.listApi().then(response => {\n            this.modelSelect[value.prop] = response.data;\n          }));\n        }\n        if (value.type === \"users\") {\n          Promises.push(this.getModelSelect(value.prop, \"name\", listUser, { _fields: \"id,name\" }).then(response => {\n            this.modelSelect[value.prop] = response;\n          }));\n        }\n        if (value.type === \"depts\") {\n          Promises.push(this.getModelSelect(value.prop, \"label\", treeselect).then(response => {\n            this.modelSelect[value.prop] = response;\n          }));\n        }\n      });\n      Promise.all(Promises).then(() => {\n        this.getTableData();\n      });\n    },\n    // 处理修改多选的值\n    handleSelectionChange(val) {\n      this.$emit(\"selection-change\", val);\n      this.multipleSelection = val;\n    },\n    // 处理修改表格分页器的页面大小(再次获取接口数据)\n    handleChangePageSize(val) {\n      this.pagination.page_size = val;\n      this.getTableData();\n    },\n    // 处理修改表格分页器的页码(再次获取接口数据)\n    handleChangeCurrentPage(val) {\n      this.pagination.page = val;\n      this.getTableData();\n    },\n    handleSortChange(info) {\n      const { prop, order } = info;\n      if (!order) {\n        this.searchForm.ordering = \"\";\n      } else if (order.startsWith(\"desc\")) {\n        this.searchForm.ordering = `-${prop}`;\n      } else {\n        this.searchForm.ordering = `${prop}`;\n      }\n      this.getTableData();\n    },\n    handleCellClick(row, column, cell, event) {\n      this.$emit(\"cell-click\", row, column, cell, event);\n    },\n    handleCellDbClick(row, column, cell, event) {\n      this.$emit(\"cell-dblclick\", row, column, cell, event);\n    },\n    handleRowClick(row, column, event) {\n      this.$emit(\"row-click\", row, column, event);\n    },\n    handleRowDblClick(row, column, event) {\n      this.$emit(\"row-dblclick\", row, column, event);\n    },\n    handleHeaderClick(column, event) {\n      this.$emit(\"header-click\", column, event);\n    },\n    /** 新增按钮*/\n    handleAdd(func) {\n      this.dateRange = [];\n      this.queryParams = {};\n      this.resetForm(\"queryForm\");\n      this.open = true;\n      this.title = func.label;\n      this.submitFormApi = func.api;\n    },\n    /** 修改按钮*/\n    handleUpdate(func, row) {\n      this.dateRange = [];\n      this.queryParams = {};\n      this.resetForm(\"queryForm\");\n      this.submitFormApi = func.api;\n      const id = row.id || this.multipleSelection.map(item => item.id);\n      if (this.selectApi) {\n        this.selectApi(id).then(response => {\n          const data = response.data;\n          if (data && typeof data === \"object\") {\n            this.form = data;\n          }\n          this.open = true;\n        });\n      } else {\n        this.open = true;\n      }\n      this.title = func.label;\n    },\n    /** 详情按钮*/\n    handleSelect(func, row) {\n      this.dateRange = [];\n      this.queryParams = {};\n      this.resetForm(\"queryForm\");\n      this.submitFormApi = func.api;\n      const id = row.id || this.multipleSelection.map(item => item.id);\n      if (this.selectApi) {\n        this.selectApi(id).then(response => {\n          const data = response.data;\n          if (data && typeof data === \"object\") {\n            this.form = data;\n          }\n          this.open = true;\n        });\n      } else {\n        this.open = true;\n      }\n      this.title = func.label;\n    },\n    /** 删除按钮操作 */\n    handleDelete(func, row) {\n      const ids = row.id || this.multipleSelection.map(item => item.id);\n      this.$confirm(\"是否确认\" + func.label + '编号为\"' + ids + '\"的数据项?', \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function() {\n        return func.api(ids);\n      }).then(() => {\n        this.getTableData();\n        this.$emit(\"delete\", ids);\n        this.msgSuccess(\"删除成功\");\n      });\n    },\n    /** 导出按钮操作 */\n    handleExport(func) {\n      const queryParams = this.queryParams;\n      this.$confirm(\"是否确认导出所有符合条件的数据项?\", \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function() {\n        return func.api(queryParams);\n      }).then(response => {\n        this.download(response.data.file_url, response.data.name);\n      });\n    },\n    /** 导入按钮操作 */\n    handleImport() {\n      this.upload.title = \"导入\";\n      this.upload.open = true;\n    }, /** 获取表单校验 */\n    getFormRules() {\n      const dict = {};\n      this.fields.map(value => {\n        if (value.form) {\n          if (value.required) {\n            dict[value.prop] = [{\n              required: value.required,\n              message: value.rules_message || value.label + \"不能为空\",\n              trigger: value.trigger || \"change\"\n            }];\n            if (value.validator) {\n              dict[value.prop][1] = {\n                validator: value.validator,\n                trigger: value.trigger || \"change\"\n              };\n            }\n          }\n        }\n      });\n      return dict;\n    },\n    /** 提交按钮 */\n    submitForm() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          if (this.form.id !== undefined) {\n            this.submitFormApi(this.form).then(() => {\n              this.msgSuccess(\"修改成功\");\n              this.open = false;\n              this.getTableData();\n              this.$emit(\"update\", this.form);\n            });\n          } else {\n            this.submitFormApi(this.form).then(() => {\n              this.msgSuccess(\"新增成功\");\n              this.open = false;\n              this.getTableData();\n              this.$emit(\"add\", this.form);\n            });\n          }\n        }\n      });\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n    },\n    close() {\n      this.$refs[\"ruleForm\"].resetFields();\n      this.form = {};\n    },\n    // 获取操作的权限列表\n    getOperationPermis() {\n      let Permis = [];\n      this.funcs.map(value => {\n        if ([\"update\", \"delete\", \"select\"].indexOf(value.type) !== -1) {\n          Permis = Permis + value.permis;\n        }\n      });\n      return Permis;\n    },\n    /** 下载模板操作 */\n    importTemplate() {\n      this.funcs.map(value => {\n        if (value.type === \"import\") {\n          this.importApi = value;\n        }\n      });\n      this.importApi.template_api().then(response => {\n        this.download(response.data.file_url, response.data.name);\n      });\n    },\n    // 文件上传中处理\n    handleFileUploadProgress(event, file, fileList) {\n      this.upload.isUploading = true;\n    },\n    // 文件上传成功处理\n    handleFileSuccess(response, file, fileList) {\n      this.funcs.map(value => {\n        if (value.type === \"import\") {\n          this.importApi = value;\n        }\n      });\n      this.upload.open = false;\n      this.upload.isUploading = false;\n      this.$refs.upload.clearFiles();\n      // 是否更新已经存在的用户数据\n      this.importApi.api({\n        file_url: response.data.file_url,\n        updateSupport: this.upload.updateSupport\n      }).then(response => {\n        this.$alert(\"导入成功！\", \"导入结果\", { dangerouslyUseHTMLString: true });\n        this.getTableData();\n      });\n    },\n    // 提交上传文件\n    submitFileForm() {\n      this.$refs.upload.submit();\n    }\n  }\n};\n</script>\n\n<style scoped>\n  .picker {\n    width: 240px;\n  }\n\n  .el-pagination {\n    padding: 5px;\n  }\n\n  .right_pagination {\n    text-align: right;\n    padding-top: 20px;\n  }\n</style>\n"]}]}