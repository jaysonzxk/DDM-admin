{"remainingRequest":"/Users/mac/Desktop/DDM-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Desktop/DDM-admin/src/layout/components/TagsView/ScrollPane.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/mac/Desktop/DDM-admin/src/layout/components/TagsView/ScrollPane.vue","mtime":1702065174000},{"path":"/Users/mac/Desktop/DDM-admin/node_modules/cache-loader/dist/cjs.js","mtime":1703645363792},{"path":"/Users/mac/Desktop/DDM-admin/node_modules/babel-loader/lib/index.js","mtime":1703645364828},{"path":"/Users/mac/Desktop/DDM-admin/node_modules/cache-loader/dist/cjs.js","mtime":1703645363792},{"path":"/Users/mac/Desktop/DDM-admin/node_modules/vue-loader/lib/index.js","mtime":1703645365038}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IHRhZ0FuZFRhZ1NwYWNpbmcgPSA0OyAvLyB0YWdBbmRUYWdTcGFjaW5nCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlNjcm9sbFBhbmUiLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsZWZ0OiAwCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHNjcm9sbFdyYXBwZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLiRyZWZzLnNjcm9sbENvbnRhaW5lci4kcmVmcy53cmFwOwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuc2Nyb2xsV3JhcHBlci5hZGRFdmVudExpc3RlbmVyKCJzY3JvbGwiLCB0aGlzLmVtaXRTY3JvbGwsIHRydWUpOwogIH0sCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIHRoaXMuc2Nyb2xsV3JhcHBlci5yZW1vdmVFdmVudExpc3RlbmVyKCJzY3JvbGwiLCB0aGlzLmVtaXRTY3JvbGwpOwogIH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlU2Nyb2xsKGUpIHsKICAgICAgY29uc3QgZXZlbnREZWx0YSA9IGUud2hlZWxEZWx0YSB8fCAtZS5kZWx0YVkgKiA0MDsKICAgICAgY29uc3QgJHNjcm9sbFdyYXBwZXIgPSB0aGlzLnNjcm9sbFdyYXBwZXI7CiAgICAgICRzY3JvbGxXcmFwcGVyLnNjcm9sbExlZnQgPSAkc2Nyb2xsV3JhcHBlci5zY3JvbGxMZWZ0ICsgZXZlbnREZWx0YSAvIDQ7CiAgICB9LAogICAgZW1pdFNjcm9sbCgpIHsKICAgICAgdGhpcy4kZW1pdCgic2Nyb2xsIik7CiAgICB9LAogICAgbW92ZVRvVGFyZ2V0KGN1cnJlbnRUYWcpIHsKICAgICAgY29uc3QgJGNvbnRhaW5lciA9IHRoaXMuJHJlZnMuc2Nyb2xsQ29udGFpbmVyLiRlbDsKICAgICAgY29uc3QgJGNvbnRhaW5lcldpZHRoID0gJGNvbnRhaW5lci5vZmZzZXRXaWR0aDsKICAgICAgY29uc3QgJHNjcm9sbFdyYXBwZXIgPSB0aGlzLnNjcm9sbFdyYXBwZXI7CiAgICAgIGNvbnN0IHRhZ0xpc3QgPSB0aGlzLiRwYXJlbnQuJHJlZnMudGFnOwoKICAgICAgbGV0IGZpcnN0VGFnID0gbnVsbDsKICAgICAgbGV0IGxhc3RUYWcgPSBudWxsOwoKICAgICAgLy8gZmluZCBmaXJzdCB0YWcgYW5kIGxhc3QgdGFnCiAgICAgIGlmICh0YWdMaXN0Lmxlbmd0aCA+IDApIHsKICAgICAgICBmaXJzdFRhZyA9IHRhZ0xpc3RbMF07CiAgICAgICAgbGFzdFRhZyA9IHRhZ0xpc3RbdGFnTGlzdC5sZW5ndGggLSAxXTsKICAgICAgfQoKICAgICAgaWYgKGZpcnN0VGFnID09PSBjdXJyZW50VGFnKSB7CiAgICAgICAgJHNjcm9sbFdyYXBwZXIuc2Nyb2xsTGVmdCA9IDA7CiAgICAgIH0gZWxzZSBpZiAobGFzdFRhZyA9PT0gY3VycmVudFRhZykgewogICAgICAgICRzY3JvbGxXcmFwcGVyLnNjcm9sbExlZnQgPSAkc2Nyb2xsV3JhcHBlci5zY3JvbGxXaWR0aCAtICRjb250YWluZXJXaWR0aDsKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyBmaW5kIHByZVRhZyBhbmQgbmV4dFRhZwogICAgICAgIGNvbnN0IGN1cnJlbnRJbmRleCA9IHRhZ0xpc3QuZmluZEluZGV4KGl0ZW0gPT4gaXRlbSA9PT0gY3VycmVudFRhZyk7CiAgICAgICAgY29uc3QgcHJldlRhZyA9IHRhZ0xpc3RbY3VycmVudEluZGV4IC0gMV07CiAgICAgICAgY29uc3QgbmV4dFRhZyA9IHRhZ0xpc3RbY3VycmVudEluZGV4ICsgMV07CgogICAgICAgIC8vIHRoZSB0YWcncyBvZmZzZXRMZWZ0IGFmdGVyIG9mIG5leHRUYWcKICAgICAgICBjb25zdCBhZnRlck5leHRUYWdPZmZzZXRMZWZ0ID0gbmV4dFRhZy4kZWwub2Zmc2V0TGVmdCArIG5leHRUYWcuJGVsLm9mZnNldFdpZHRoICsgdGFnQW5kVGFnU3BhY2luZzsKCiAgICAgICAgLy8gdGhlIHRhZydzIG9mZnNldExlZnQgYmVmb3JlIG9mIHByZXZUYWcKICAgICAgICBjb25zdCBiZWZvcmVQcmV2VGFnT2Zmc2V0TGVmdCA9IHByZXZUYWcuJGVsLm9mZnNldExlZnQgLSB0YWdBbmRUYWdTcGFjaW5nOwoKICAgICAgICBpZiAoYWZ0ZXJOZXh0VGFnT2Zmc2V0TGVmdCA+ICRzY3JvbGxXcmFwcGVyLnNjcm9sbExlZnQgKyAkY29udGFpbmVyV2lkdGgpIHsKICAgICAgICAgICRzY3JvbGxXcmFwcGVyLnNjcm9sbExlZnQgPSBhZnRlck5leHRUYWdPZmZzZXRMZWZ0IC0gJGNvbnRhaW5lcldpZHRoOwogICAgICAgIH0gZWxzZSBpZiAoYmVmb3JlUHJldlRhZ09mZnNldExlZnQgPCAkc2Nyb2xsV3JhcHBlci5zY3JvbGxMZWZ0KSB7CiAgICAgICAgICAkc2Nyb2xsV3JhcHBlci5zY3JvbGxMZWZ0ID0gYmVmb3JlUHJldlRhZ09mZnNldExlZnQ7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["ScrollPane.vue"],"names":[],"mappings":";;;;;;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ScrollPane.vue","sourceRoot":"src/layout/components/TagsView","sourcesContent":["<template>\n  <el-scrollbar ref=\"scrollContainer\" :vertical=\"false\" class=\"scroll-container\" @wheel.native.prevent=\"handleScroll\">\n    <slot />\n  </el-scrollbar>\n</template>\n\n<script>\nconst tagAndTagSpacing = 4; // tagAndTagSpacing\n\nexport default {\n  name: \"ScrollPane\",\n  data() {\n    return {\n      left: 0\n    };\n  },\n  computed: {\n    scrollWrapper() {\n      return this.$refs.scrollContainer.$refs.wrap;\n    }\n  },\n  mounted() {\n    this.scrollWrapper.addEventListener(\"scroll\", this.emitScroll, true);\n  },\n  beforeDestroy() {\n    this.scrollWrapper.removeEventListener(\"scroll\", this.emitScroll);\n  },\n  methods: {\n    handleScroll(e) {\n      const eventDelta = e.wheelDelta || -e.deltaY * 40;\n      const $scrollWrapper = this.scrollWrapper;\n      $scrollWrapper.scrollLeft = $scrollWrapper.scrollLeft + eventDelta / 4;\n    },\n    emitScroll() {\n      this.$emit(\"scroll\");\n    },\n    moveToTarget(currentTag) {\n      const $container = this.$refs.scrollContainer.$el;\n      const $containerWidth = $container.offsetWidth;\n      const $scrollWrapper = this.scrollWrapper;\n      const tagList = this.$parent.$refs.tag;\n\n      let firstTag = null;\n      let lastTag = null;\n\n      // find first tag and last tag\n      if (tagList.length > 0) {\n        firstTag = tagList[0];\n        lastTag = tagList[tagList.length - 1];\n      }\n\n      if (firstTag === currentTag) {\n        $scrollWrapper.scrollLeft = 0;\n      } else if (lastTag === currentTag) {\n        $scrollWrapper.scrollLeft = $scrollWrapper.scrollWidth - $containerWidth;\n      } else {\n        // find preTag and nextTag\n        const currentIndex = tagList.findIndex(item => item === currentTag);\n        const prevTag = tagList[currentIndex - 1];\n        const nextTag = tagList[currentIndex + 1];\n\n        // the tag's offsetLeft after of nextTag\n        const afterNextTagOffsetLeft = nextTag.$el.offsetLeft + nextTag.$el.offsetWidth + tagAndTagSpacing;\n\n        // the tag's offsetLeft before of prevTag\n        const beforePrevTagOffsetLeft = prevTag.$el.offsetLeft - tagAndTagSpacing;\n\n        if (afterNextTagOffsetLeft > $scrollWrapper.scrollLeft + $containerWidth) {\n          $scrollWrapper.scrollLeft = afterNextTagOffsetLeft - $containerWidth;\n        } else if (beforePrevTagOffsetLeft < $scrollWrapper.scrollLeft) {\n          $scrollWrapper.scrollLeft = beforePrevTagOffsetLeft;\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.scroll-container {\n  white-space: nowrap;\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  ::v-deep {\n    .el-scrollbar__bar {\n      bottom: 0px;\n    }\n    .el-scrollbar__wrap {\n      height: 49px;\n    }\n  }\n}\n</style>\n"]}]}