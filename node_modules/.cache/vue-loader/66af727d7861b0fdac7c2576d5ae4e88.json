{"remainingRequest":"/Users/jayson/Desktop/work/DDM-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jayson/Desktop/work/DDM-admin/src/components/UsersTree/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/jayson/Desktop/work/DDM-admin/src/components/UsersTree/index.vue","mtime":1720245294009},{"path":"/Users/jayson/Desktop/work/DDM-admin/node_modules/cache-loader/dist/cjs.js","mtime":1720245288376},{"path":"/Users/jayson/Desktop/work/DDM-admin/node_modules/babel-loader/lib/index.js","mtime":1720245285342},{"path":"/Users/jayson/Desktop/work/DDM-admin/node_modules/cache-loader/dist/cjs.js","mtime":1720245288376},{"path":"/Users/jayson/Desktop/work/DDM-admin/node_modules/vue-loader/lib/index.js","mtime":1720245293567}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBUcmVlc2VsZWN0IGZyb20gIkByaW9waGFlL3Z1ZS10cmVlc2VsZWN0IjsKaW1wb3J0ICJAcmlvcGhhZS92dWUtdHJlZXNlbGVjdC9kaXN0L3Z1ZS10cmVlc2VsZWN0LmNzcyI7CmltcG9ydCB7IGxpc3RVc2VyIH0gZnJvbSAiQC9hcGkvYWRtaW4vcGVybWlzc2lvbi91c2VyIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRGVwdFRyZWUiLAogIGNvbXBvbmVudHM6IHsgVHJlZXNlbGVjdCB9LAogIHByb3BzOiB7CiAgICAvKiDpgInmi6nlmajnmoTlhoXlrrkgKi8KICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSB2dWUvcmVxdWlyZS1wcm9wLXR5cGUtY29uc3RydWN0b3IKICAgIHZhbHVlOiB7IHR5cGU6IE51bWJlciB8IEFycmF5IH0sCiAgICAvKiDnlKjkuo7mmL7npLrpgInpobkgKi8KICAgIHBsYWNlaG9sZGVyOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogIuivt+mAieaLqeeUqOaItyIgfSwKICAgIC8qIOaYr+WQpuWkmumAiSAqLwogICAgbXVsdGlwbGU6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogZmFsc2UgfSwKICAgIC8qIOaYr+WQpuWPquiDvemAieacq+e6pyAqLwogICAgZGlzYWJsZV9icmFuY2hfbm9kZXM6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogZmFsc2UgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXJzT3B0aW9uczogW10sCiAgICAgIHVzZXJzX3ZhbHVlOiAiIgogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICB1c2Vyc192YWx1ZShuZXdWYWx1ZSkgewogICAgICB0aGlzLiRlbWl0KCJ1cGRhdGU6dmFsdWUiLCBuZXdWYWx1ZSk7CiAgICB9LAogICAgdmFsdWU6IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24obmV3VmFsdWUpIHsKICAgICAgICB0aGlzLnVzZXJzX3ZhbHVlID0gbmV3VmFsdWU7CiAgICAgIH0sCiAgICAgIGltbWVkaWF0ZTogdHJ1ZQogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0VHJlZXNlbGVjdCgpOwogIH0sCiAgbWV0aG9kczogewogICAgLyoqIOafpeivouaJgOacieeUqOaIt+S/oeaBryAqKi8KICAgIGdldFRyZWVzZWxlY3QoKSB7CiAgICAgIGxpc3RVc2VyKHsgcGFnZU51bTogImFsbCIsIF9maWVsZHM6ICJpZCxuYW1lIiB9KS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICByZXNwb25zZS5kYXRhLm1hcCh2YWwgPT4geyB2YWxbImxhYmVsIl0gPSB2YWxbIm5hbWUiXTsgfSk7CiAgICAgICAgdGhpcy51c2Vyc09wdGlvbnMgPSB0aGlzLmhhbmRsZVRyZWUocmVzcG9uc2UuZGF0YSwgImlkIik7CiAgICAgIH0pOwogICAgfQogIH0KCn07Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"index.vue","sourceRoot":"src/components/UsersTree","sourcesContent":["<!-- 用户选择器 -->\n<template>\n  <div>\n    <treeselect\n      v-model=\"users_value\"\n      :options=\"usersOptions\"\n      :multiple=\"multiple\"\n      :show-count=\"true\"\n      :placeholder=\"placeholder\"\n      :disable-branch-nodes=\"disable_branch_nodes\"\n    />\n  </div>\n</template>\n\n<script>\nimport Treeselect from \"@riophae/vue-treeselect\";\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\nimport { listUser } from \"@/api/admin/permission/user\";\n\nexport default {\n  name: \"DeptTree\",\n  components: { Treeselect },\n  props: {\n    /* 选择器的内容 */\n    // eslint-disable-next-line vue/require-prop-type-constructor\n    value: { type: Number | Array },\n    /* 用于显示选项 */\n    placeholder: { type: String, default: \"请选择用户\" },\n    /* 是否多选 */\n    multiple: { type: Boolean, default: false },\n    /* 是否只能选末级 */\n    disable_branch_nodes: { type: Boolean, default: false }\n  },\n  data() {\n    return {\n      usersOptions: [],\n      users_value: \"\"\n    };\n  },\n  watch: {\n    users_value(newValue) {\n      this.$emit(\"update:value\", newValue);\n    },\n    value: {\n      handler: function(newValue) {\n        this.users_value = newValue;\n      },\n      immediate: true\n    }\n  },\n  created() {\n    this.getTreeselect();\n  },\n  methods: {\n    /** 查询所有用户信息 **/\n    getTreeselect() {\n      listUser({ pageNum: \"all\", _fields: \"id,name\" }).then(response => {\n        response.data.map(val => { val[\"label\"] = val[\"name\"]; });\n        this.usersOptions = this.handleTree(response.data, \"id\");\n      });\n    }\n  }\n\n};\n</script>\n\n<style scoped>\n\n</style>\n"]}]}